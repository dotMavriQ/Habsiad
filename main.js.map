{"version":3,"file":"main.js","mappings":"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","sources":["webpack://habsiad/./src/habitica/habiticaService.ts","webpack://habsiad/./src/settings.ts","webpack://habsiad/./src/utils/settingsSync.ts","webpack://habsiad/./src/views/sidebarView.ts","webpack://habsiad/./src/views/tabs/alcoholTab.ts","webpack://habsiad/./src/views/tabs/dataQualityDiagnostics.ts","webpack://habsiad/./src/views/tabs/frontmatterGlossary.ts","webpack://habsiad/./src/views/tabs/labelsTab.ts","webpack://habsiad/./src/views/tabs/logsTab.ts","webpack://habsiad/external commonjs \"obsidian\"","webpack://habsiad/webpack/bootstrap","webpack://habsiad/webpack/runtime/compat get default export","webpack://habsiad/webpack/runtime/define property getters","webpack://habsiad/webpack/runtime/hasOwnProperty shorthand","webpack://habsiad/webpack/runtime/make namespace object","webpack://habsiad/./src/main.ts"],"sourcesContent":["import { requestUrl, RequestUrlParam } from 'obsidian';\nimport HabsiadPlugin from '../main';\n\nexport class HabiticaService {\n  private plugin: HabsiadPlugin;\n  private apiUrl: string = 'https://habitica.com/api/v3';\n\n  constructor(plugin: HabsiadPlugin) {\n    this.plugin = plugin;\n  }\n\n  async getUserData(): Promise<any> {\n    const { habiticaUserId, habiticaApiToken } = this.plugin.settings;\n\n    if (!habiticaUserId || !habiticaApiToken) {\n      throw new Error('Habitica credentials are not set.');\n    }\n\n    const options: RequestUrlParam = {\n      url: `${this.apiUrl}/user`,\n      method: 'GET',\n      headers: {\n        'x-api-user': habiticaUserId,\n        'x-api-key': habiticaApiToken,\n      },\n    };\n\n    try {\n      const response = await requestUrl(options);\n      return response.json.data;\n    } catch (error) {\n      console.error('Habitica API Error:', error);\n      throw error;\n    }\n  }\n\n  async getTasks(): Promise<any[]> {\n    const { habiticaUserId, habiticaApiToken } = this.plugin.settings;\n\n    if (!habiticaUserId || !habiticaApiToken) {\n      throw new Error('Habitica credentials are not set.');\n    }\n\n    const options: RequestUrlParam = {\n      url: `${this.apiUrl}/tasks/user`,\n      method: 'GET',\n      headers: {\n        'x-api-user': habiticaUserId,\n        'x-api-key': habiticaApiToken,\n      },\n    };\n\n    try {\n      const response = await requestUrl(options);\n      return response.json.data;\n    } catch (error) {\n      console.error('Habitica API Error:', error);\n      throw error;\n    }\n  }\n}\n","import { App, PluginSettingTab, Setting, Modifier } from \"obsidian\";\nimport HabsiadPlugin from \"./main\";\n\nexport interface KeyboardShortcut {\n  modifiers: Modifier[];\n  key: string;\n}\n\nexport interface HabsiadSettings {\n  habiticaUserId: string;\n  habiticaApiToken: string;\n  journalFolderName: string;\n  customFrontmatter: { [key: string]: string };\n  shortcuts: {\n    generateHabitsAndDailies: KeyboardShortcut;\n    replaceWeekday: KeyboardShortcut;\n    syncTodo: KeyboardShortcut;\n    syncHabiticaToFrontmatter: KeyboardShortcut;\n    calculateCalorieTotals: KeyboardShortcut;\n    openRetrotagger: KeyboardShortcut;\n  };\n  // Tab visibility options\n  showTabs: {\n    steps: boolean;\n    weight: boolean;\n    calories: boolean;\n    alcohol: boolean;\n  };\n}\n\nexport const DEFAULT_SETTINGS: HabsiadSettings = {\n  habiticaUserId: \"\",\n  habiticaApiToken: \"\",\n  journalFolderName: \"Journal\",\n  customFrontmatter: {},\n  shortcuts: {\n    generateHabitsAndDailies: { modifiers: [\"Mod\", \"Shift\"], key: \"H\" },\n    replaceWeekday: { modifiers: [\"Mod\", \"Shift\"], key: \"D\" },\n    syncTodo: { modifiers: [\"Mod\", \"Shift\"], key: \"Y\" },\n    syncHabiticaToFrontmatter: { modifiers: [\"Mod\", \"Shift\"], key: \"Q\" },\n    calculateCalorieTotals: { modifiers: [\"Mod\", \"Shift\"], key: \"C\" },\n    openRetrotagger: { modifiers: [\"Mod\", \"Shift\"], key: \"'\" },\n  },\n  // All tabs visible by default\n  showTabs: {\n    steps: true,\n    weight: true,\n    calories: true,\n    alcohol: true,\n  },\n};\n\nexport class HabsiadSettingTab extends PluginSettingTab {\n  plugin: HabsiadPlugin;\n\n  constructor(app: App, plugin: HabsiadPlugin) {\n    super(app, plugin);\n    this.plugin = plugin;\n  }\n\n  display(): void {\n    const { containerEl } = this;\n\n    containerEl.empty();\n    containerEl.createEl(\"h2\", { text: \"Habsiad Settings\" });\n\n    // Habitica User ID Setting\n    new Setting(containerEl)\n      .setName(\"Habitica User ID\")\n      .setDesc(\"Enter your Habitica User ID.\")\n      .addText((text) =>\n        text\n          .setPlaceholder(\"User ID\")\n          .setValue(this.plugin.settings.habiticaUserId)\n          .onChange(async (value) => {\n            this.plugin.settings.habiticaUserId = value;\n            await this.plugin.saveSettings();\n          })\n      );\n\n    // Habitica API Token Setting\n    new Setting(containerEl)\n      .setName(\"Habitica API Token\")\n      .setDesc(\"Enter your Habitica API Token.\")\n      .addText((text) =>\n        text\n          .setPlaceholder(\"API Token\")\n          .setValue(this.plugin.settings.habiticaApiToken)\n          .onChange(async (value) => {\n            this.plugin.settings.habiticaApiToken = value;\n            await this.plugin.saveSettings();\n          })\n      );\n\n    // Journal Folder Name Setting\n    new Setting(containerEl)\n      .setName(\"Journal Folder Name\")\n      .setDesc(\"Specify the folder where the plugin commands can be used.\")\n      .addText((text) =>\n        text\n          .setPlaceholder(\"Journal\")\n          .setValue(this.plugin.settings.journalFolderName)\n          .onChange(async (value) => {\n            this.plugin.settings.journalFolderName = value;\n            await this.plugin.saveSettings();\n          })\n      );\n\n    // Add a section for keyboard shortcuts\n    containerEl.createEl(\"h3\", { text: \"Keyboard Shortcuts\" });\n\n    // Helper function to create a shortcut setting\n    const createShortcutSetting = (\n      id: keyof HabsiadSettings[\"shortcuts\"],\n      name: string,\n      desc: string\n    ) => {\n      const setting = new Setting(containerEl).setName(name).setDesc(desc);\n\n      // Add dropdown for modifier keys\n      setting.addDropdown((dropdown) => {\n        const options = {\n          none: \"None\",\n          Mod: \"Ctrl/Cmd\",\n          \"Mod+Shift\": \"Ctrl/Cmd+Shift\",\n          \"Mod+Alt\": \"Ctrl/Cmd+Alt\",\n          Alt: \"Alt\",\n          \"Alt+Shift\": \"Alt+Shift\",\n        };\n\n        const currentModifiers = this.plugin.settings.shortcuts[id].modifiers;\n        let currentValue = \"none\";\n        if (\n          currentModifiers.includes(\"Mod\") &&\n          currentModifiers.includes(\"Shift\")\n        ) {\n          currentValue = \"Mod+Shift\";\n        } else if (\n          currentModifiers.includes(\"Mod\") &&\n          currentModifiers.includes(\"Alt\")\n        ) {\n          currentValue = \"Mod+Alt\";\n        } else if (\n          currentModifiers.includes(\"Alt\") &&\n          currentModifiers.includes(\"Shift\")\n        ) {\n          currentValue = \"Alt+Shift\";\n        } else if (currentModifiers.includes(\"Mod\")) {\n          currentValue = \"Mod\";\n        } else if (currentModifiers.includes(\"Alt\")) {\n          currentValue = \"Alt\";\n        }\n\n        dropdown\n          .addOptions(options)\n          .setValue(currentValue)\n          .onChange(async (value) => {\n            let modifiers: Modifier[] = [];\n            if (value === \"Mod+Shift\") {\n              modifiers = [\"Mod\", \"Shift\"];\n            } else if (value === \"Mod+Alt\") {\n              modifiers = [\"Mod\", \"Alt\"];\n            } else if (value === \"Alt+Shift\") {\n              modifiers = [\"Alt\", \"Shift\"];\n            } else if (\n              value !== \"none\" &&\n              (value === \"Mod\" || value === \"Alt\")\n            ) {\n              modifiers = [value];\n            }\n\n            this.plugin.settings.shortcuts[id].modifiers = modifiers;\n            await this.plugin.saveSettings();\n          });\n      });\n\n      // Add text field for key\n      setting.addText((text) => {\n        text\n          .setPlaceholder(\"Key\")\n          .setValue(this.plugin.settings.shortcuts[id].key)\n          .onChange(async (value) => {\n            if (value) {\n              this.plugin.settings.shortcuts[id].key = value.toUpperCase();\n              await this.plugin.saveSettings();\n            }\n          });\n      });\n\n      return setting;\n    };\n\n    // Create settings for each shortcut\n    createShortcutSetting(\n      \"generateHabitsAndDailies\",\n      \"Generate Habits & Dailies\",\n      \"Shortcut to insert Habitica habits and dailies into the current note.\"\n    );\n\n    createShortcutSetting(\n      \"replaceWeekday\",\n      \"Replace {WEEKDAY}\",\n      \"Shortcut to replace {WEEKDAY} with the actual day of the week.\"\n    );\n\n    createShortcutSetting(\n      \"syncTodo\",\n      \"Sync Habitica TODO\",\n      \"Shortcut to sync Habitica TODOs to the current note.\"\n    );\n\n    createShortcutSetting(\n      \"syncHabiticaToFrontmatter\",\n      \"Sync Habitica to Frontmatter\",\n      \"Shortcut to sync Habitica data to frontmatter in journal files.\"\n    );\n\n    createShortcutSetting(\n      \"calculateCalorieTotals\",\n      \"Calculate Calorie Totals\",\n      \"Shortcut to calculate and update calorie totals in journal files.\"\n    );\n\n    createShortcutSetting(\n      \"openRetrotagger\",\n      \"Open Retrotagger\",\n      \"Shortcut to open the Retrotagger tool for adding achievements and dailies to journal entries.\"\n    );\n\n    // Optional Tabs Section\n    containerEl.createEl(\"h3\", { text: \"Optional Tabs\" });\n    containerEl.createEl(\"p\", {\n      text: \"Choose which tabs to show in the sidebar. Changes will take effect after reloading the plugin.\",\n      cls: \"setting-item-description\",\n    });\n\n    // Steps Tab Toggle\n    new Setting(containerEl)\n      .setName(\"Show Steps Tab\")\n      .setDesc(\"Enable or disable the Steps tab in the sidebar.\")\n      .addToggle((toggle) =>\n        toggle\n          .setValue(this.plugin.settings.showTabs.steps)\n          .onChange(async (value) => {\n            this.plugin.settings.showTabs.steps = value;\n            await this.plugin.saveSettings();\n          })\n      );\n\n    // Weight Tab Toggle\n    new Setting(containerEl)\n      .setName(\"Show Weight Tab\")\n      .setDesc(\"Enable or disable the Weight tab in the sidebar.\")\n      .addToggle((toggle) =>\n        toggle\n          .setValue(this.plugin.settings.showTabs.weight)\n          .onChange(async (value) => {\n            this.plugin.settings.showTabs.weight = value;\n            await this.plugin.saveSettings();\n          })\n      );\n\n    // Calories Tab Toggle\n    new Setting(containerEl)\n      .setName(\"Show Calories Tab\")\n      .setDesc(\"Enable or disable the Calories tab in the sidebar.\")\n      .addToggle((toggle) =>\n        toggle\n          .setValue(this.plugin.settings.showTabs.calories)\n          .onChange(async (value) => {\n            this.plugin.settings.showTabs.calories = value;\n            await this.plugin.saveSettings();\n          })\n      );\n\n    // Alcohol Tab Toggle\n    new Setting(containerEl)\n      .setName(\"Show Alcohol Tab\")\n      .setDesc(\"Enable or disable the Alcohol tab in the sidebar.\")\n      .addToggle((toggle) =>\n        toggle\n          .setValue(this.plugin.settings.showTabs.alcohol)\n          .onChange(async (value) => {\n            this.plugin.settings.showTabs.alcohol = value;\n            await this.plugin.saveSettings();\n          })\n      );\n\n    // Settings Sync Section\n    containerEl.createEl(\"h3\", { text: \"Settings Synchronization\" });\n    containerEl.createEl(\"p\", {\n      text: \"Sync your settings across devices through your Obsidian vault. Settings are automatically backed up to a sync file when changed.\",\n      cls: \"setting-item-description\",\n    });\n\n    // Sync Status Display\n    const syncStatusDiv = containerEl.createDiv({\n      cls: \"setting-item-description\",\n    });\n    this.updateSyncStatus(syncStatusDiv);\n\n    // Manual sync controls\n    new Setting(containerEl)\n      .setName(\"Export Settings to Sync File\")\n      .setDesc(\n        \"Manually save current settings to sync file for cross-device synchronization.\"\n      )\n      .addButton((button) =>\n        button\n          .setButtonText(\"Export Now\")\n          .setCta()\n          .onClick(async () => {\n            const success = await (\n              this.plugin as any\n            ).settingsSync.exportToSyncFile();\n            if (success) {\n              this.updateSyncStatus(syncStatusDiv);\n            }\n          })\n      );\n\n    new Setting(containerEl)\n      .setName(\"Import Settings from Sync File\")\n      .setDesc(\n        \"Restore settings from sync file. This will overwrite current settings.\"\n      )\n      .addButton((button) =>\n        button\n          .setButtonText(\"Import Now\")\n          .setWarning()\n          .onClick(async () => {\n            const success = await (\n              this.plugin as any\n            ).settingsSync.importFromSyncFile();\n            if (success) {\n              this.display(); // Refresh the settings display\n            }\n          })\n      );\n  }\n\n  private async updateSyncStatus(statusDiv: HTMLElement) {\n    statusDiv.empty();\n    const settingsSync = (this.plugin as any).settingsSync;\n    const syncFileExists = await settingsSync.syncFileExists();\n\n    if (syncFileExists) {\n      statusDiv.createEl(\"span\", {\n        text: \"✅ Sync file exists - settings will sync across devices\",\n        cls: \"mod-success\",\n      });\n    } else {\n      statusDiv.createEl(\"span\", {\n        text: \"⚠️ No sync file found - click 'Export Now' to create one\",\n        cls: \"mod-warning\",\n      });\n    }\n  }\n}\n","import { TFile, Notice } from \"obsidian\";\nimport HabsiadPlugin from \"../main\";\nimport { HabsiadSettings } from \"../settings\";\n\n/**\n * Settings synchronization utility for cross-device sync\n * Stores settings in a file within the vault so they sync to mobile\n */\nexport class SettingsSync {\n  private plugin: HabsiadPlugin;\n  private syncFilePath: string =\n    \".obsidian/plugins/Habsiad/habsiad-settings.json\";\n\n  constructor(plugin: HabsiadPlugin) {\n    this.plugin = plugin;\n  }\n\n  /**\n   * Save settings to both Obsidian's data.json AND a sync file in the vault\n   */\n  async saveSettings(settings: HabsiadSettings): Promise<void> {\n    try {\n      // Save to Obsidian's normal data.json\n      await this.plugin.saveData(settings);\n\n      // Also save to a sync file in the vault for cross-device sync\n      await this.saveSyncFile(settings);\n    } catch (error) {\n      console.error(\"Error saving settings:\", error);\n      new Notice(\"Failed to save settings\");\n    }\n  }\n\n  /**\n   * Load settings with fallback priority:\n   * 1. Obsidian's data.json (if exists)\n   * 2. Sync file in vault (if data.json missing)\n   * 3. Default settings (if neither exists)\n   */\n  async loadSettings(): Promise<HabsiadSettings> {\n    try {\n      // First try to load from Obsidian's normal data.json\n      const localData = await this.plugin.loadData();\n\n      if (localData && Object.keys(localData).length > 0) {\n        // data.json exists and has content, use it\n        console.log(\"Loaded settings from data.json\");\n        return localData;\n      }\n\n      // data.json is missing or empty, try to load from sync file\n      const syncData = await this.loadSyncFile();\n      if (syncData) {\n        console.log(\"Loaded settings from sync file (data.json was missing)\");\n        // Save to data.json for future use\n        await this.plugin.saveData(syncData);\n        new Notice(\"Settings restored from vault sync file\");\n        return syncData;\n      }\n\n      // Neither file exists, return defaults\n      console.log(\"No settings found, using defaults\");\n      return {} as HabsiadSettings; // Will be merged with defaults in main.ts\n    } catch (error) {\n      console.error(\"Error loading settings:\", error);\n      return {} as HabsiadSettings;\n    }\n  }\n\n  /**\n   * Save settings to sync file in vault\n   */\n  private async saveSyncFile(settings: HabsiadSettings): Promise<void> {\n    try {\n      // Create a clean copy without sensitive data for sync\n      const syncSettings = this.sanitizeForSync(settings);\n      const jsonContent = JSON.stringify(syncSettings, null, 2);\n\n      await this.plugin.app.vault.adapter.write(this.syncFilePath, jsonContent);\n    } catch (error) {\n      console.warn(\"Could not save sync file:\", error);\n      // Don't throw - this is a nice-to-have feature\n    }\n  }\n\n  /**\n   * Load settings from sync file in vault\n   */\n  private async loadSyncFile(): Promise<HabsiadSettings | null> {\n    try {\n      const content = await this.plugin.app.vault.adapter.read(\n        this.syncFilePath\n      );\n      return JSON.parse(content);\n    } catch (error) {\n      console.warn(\"Could not load sync file:\", error);\n      return null;\n    }\n  }\n\n  /**\n   * Remove or mask sensitive data before syncing\n   * You might want to exclude API tokens from syncing for security\n   */\n  private sanitizeForSync(settings: HabsiadSettings): HabsiadSettings {\n    const syncSettings = { ...settings };\n\n    // Option 1: Sync everything (including API keys)\n    // This is convenient but less secure\n    return syncSettings;\n\n    // Option 2: Exclude sensitive data (uncomment if you prefer this)\n    // syncSettings.habiticaApiToken = \"\"; // Don't sync API token\n    // return syncSettings;\n  }\n\n  /**\n   * Manual sync operation - import settings from sync file\n   */\n  async importFromSyncFile(): Promise<boolean> {\n    try {\n      const syncData = await this.loadSyncFile();\n      if (!syncData) {\n        new Notice(\"No sync file found to import from\");\n        return false;\n      }\n\n      // Merge with current settings, prioritizing sync file\n      this.plugin.settings = Object.assign({}, this.plugin.settings, syncData);\n      await this.saveSettings(this.plugin.settings);\n\n      new Notice(\"Settings imported from sync file\");\n      return true;\n    } catch (error) {\n      console.error(\"Error importing from sync file:\", error);\n      new Notice(\"Failed to import settings from sync file\");\n      return false;\n    }\n  }\n\n  /**\n   * Manual sync operation - export current settings to sync file\n   */\n  async exportToSyncFile(): Promise<boolean> {\n    try {\n      await this.saveSyncFile(this.plugin.settings);\n      new Notice(\"Settings exported to sync file\");\n      return true;\n    } catch (error) {\n      console.error(\"Error exporting to sync file:\", error);\n      new Notice(\"Failed to export settings to sync file\");\n      return false;\n    }\n  }\n\n  /**\n   * Check if sync file exists\n   */\n  async syncFileExists(): Promise<boolean> {\n    try {\n      await this.plugin.app.vault.adapter.stat(this.syncFilePath);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n}\n","import { ItemView, TFolder, TFile, WorkspaceLeaf } from \"obsidian\";\nimport HabsiadPlugin from \"../main\"; // Ensure the path matches your project structure\n\nimport { displayGlossaryTable } from \"./tabs/frontmatterGlossary\";\nimport { DataQualityDiagnosticsView } from \"./tabs/dataQualityDiagnostics\";\nimport { AlcoholTab } from \"./tabs/alcoholTab\";\nimport { LabelsTab } from \"./tabs/labelsTab\";\nimport { LogsTab } from \"./tabs/logsTab\";\n\nexport const VIEW_TYPE_SIDEBAR = \"habsiad-sidebar-view\";\n\nexport class SidebarView extends ItemView {\n  private plugin: HabsiadPlugin;\n\n  constructor(leaf: WorkspaceLeaf, plugin: HabsiadPlugin) {\n    super(leaf);\n    this.plugin = plugin;\n  }\n\n  getViewType() {\n    return VIEW_TYPE_SIDEBAR;\n  }\n\n  getDisplayText() {\n    return \"Habsiad\";\n  }\n\n  getIcon() {\n    return \"diamond\"; // Use a suitable icon\n  }\n\n  async onOpen() {\n    const container = this.containerEl.children[1];\n    container.empty();\n\n    const tabContainer = container.createDiv(\"habsiad-tab-container\");\n    // Define all possible tabs\n    const allTabs = [\n      { emoji: \"🏡\", view: \"info\", label: \"Home\" },\n      { emoji: \"🔎\", view: \"diagnostics\", label: \"Data Quality Diagnostics\" },\n      { emoji: \"⬆️\", view: \"glossary\", label: \"Frontmatter Glossary\" },\n      { emoji: \"🏷️\", view: \"labels\", label: \"Labels\" },\n      { emoji: \"\\u{1F4D4}\", view: \"logs\", label: \"Logs\" },\n      {\n        emoji: \"👟\",\n        view: \"steps\",\n        label: \"Steps\",\n        optional: true,\n        settingKey: \"steps\",\n      },\n      {\n        emoji: \"⚖️\",\n        view: \"weight\",\n        label: \"Weight\",\n        optional: true,\n        settingKey: \"weight\",\n      },\n      {\n        emoji: \"🍔\",\n        view: \"calories\",\n        label: \"Calories\",\n        optional: true,\n        settingKey: \"calories\",\n      },\n      {\n        emoji: \"🍷\",\n        view: \"alcohol\",\n        label: \"Alcohol\",\n        optional: true,\n        settingKey: \"alcohol\",\n      },\n    ];\n\n    // Filter tabs based on settings\n    const tabs = allTabs.filter((tab) => {\n      if (tab.optional) {\n        return this.plugin.settings.showTabs[\n          tab.settingKey as keyof typeof this.plugin.settings.showTabs\n        ];\n      }\n      return true;\n    });\n\n    tabs.forEach((tab) => {\n      const tabButton = tabContainer.createSpan(\"habsiad-tab\");\n      tabButton.setText(tab.emoji);\n      // Add tooltip to show the tab name on hover\n      tabButton.setAttr(\"title\", tab.label);\n      // Ensure cursor pointer is set\n      tabButton.style.cursor = \"pointer\";\n      tabButton.onClickEvent(() => {\n        this.switchTab(tab.view);\n        // Remove active class from all tabs\n        const allTabElements = tabContainer.querySelectorAll(\".habsiad-tab\");\n        allTabElements.forEach((el) => el.removeClass(\"active\"));\n        // Add active class to clicked tab\n        tabButton.addClass(\"active\");\n      });\n    });\n\n    // Set the first tab as active by default\n    const firstTab = tabContainer.querySelector(\".habsiad-tab\");\n    if (firstTab) firstTab.addClass(\"active\");\n\n    const contentArea = container.createDiv(\"habsiad-content-area\");\n    this.displayContent(contentArea, \"info\");\n  }\n\n  async onClose() {\n    // Cleanup if necessary\n  }\n\n  private switchTab(view: string) {\n    const contentArea = this.containerEl.querySelector(\n      \".habsiad-content-area\"\n    ) as HTMLElement;\n    if (contentArea) {\n      contentArea.empty();\n      this.displayContent(contentArea, view);\n    }\n  }\n\n  private displayContent(container: HTMLElement, view: string) {\n    switch (view) {\n      case \"info\":\n        this.displayInfoTab(container);\n        break;\n      case \"diagnostics\":\n        this.displayDiagnosticsTab(container);\n        break;\n      case \"glossary\":\n        this.displayGlossaryTab(container);\n        break;\n      case \"steps\":\n        this.displayStepsTab(container);\n        break;\n      case \"weight\":\n        this.displayWeightTab(container);\n        break;\n      case \"calories\":\n        this.displayCaloriesTab(container);\n        break;\n      case \"alcohol\":\n        this.displayAlcoholTab(container);\n        break;\n      case \"labels\":\n        this.displayLabelsTab(container);\n        break;\n      case \"logs\":\n        this.displayLogsTab(container);\n        break;\n      default:\n        container.setText(\"Default View\");\n    }\n  }\n\n  private async displayDiagnosticsTab(container: HTMLElement) {\n    const diagnosticsView = new DataQualityDiagnosticsView(\n      this.app,\n      this.plugin\n    );\n    const diagnosticsElement = await diagnosticsView.render();\n    container.appendChild(diagnosticsElement);\n  }\n\n  private displayGlossaryTab(container: HTMLElement) {\n    displayGlossaryTable(container, this.plugin);\n  }\n\n  private displayStepsTab(container: HTMLElement) {\n    const journalFolderName =\n      this.plugin.settings.journalFolderName || \"Journal\";\n    const journalFolder =\n      this.plugin.app.vault.getAbstractFileByPath(journalFolderName);\n\n    if (!journalFolder || !(journalFolder instanceof TFolder)) {\n      container.setText(`Journal folder \"${journalFolderName}\" not found.`);\n      return;\n    }\n\n    container.createEl(\"h3\", { text: \"Daily Steps\" });\n\n    const files = journalFolder.children.filter(\n      (f) => f instanceof TFile && f.extension === \"md\"\n    );\n\n    const dateFileMap = files\n      .map((file) => {\n        const match = file.name.match(/^(\\d{4})-(\\d{2})-(\\d{2})\\.md$/); // Match YYYY-MM-DD.md\n        if (!match) return null;\n        const [_, year, month, day] = match;\n        return { dateString: `${year}-${month}-${day}`, file };\n      })\n      .filter(Boolean) as { dateString: string; file: TFile }[];\n\n    dateFileMap.sort((a, b) => {\n      if (a.dateString < b.dateString) return -1;\n      if (a.dateString > b.dateString) return 1;\n      return 0;\n    });\n\n    const table = container.createEl(\"table\", { cls: \"habsiad-steps-table\" });\n    const thead = table.createEl(\"thead\");\n    const headerRow = thead.createEl(\"tr\");\n    headerRow.createEl(\"th\", { text: \"Date (YYYY/MM/DD)\" });\n    headerRow.createEl(\"th\", { text: \"Steps\" });\n\n    const tbody = table.createEl(\"tbody\");\n\n    for (const { dateString, file } of dateFileMap) {\n      const metadata = this.plugin.app.metadataCache.getFileCache(file);\n      const frontmatter = metadata?.frontmatter;\n      const currentSteps = frontmatter?.steps ?? \"\";\n\n      const row = tbody.createEl(\"tr\");\n      row.createEl(\"td\", { text: dateString.replace(/-/g, \"/\") });\n\n      const stepsCell = row.createEl(\"td\");\n      const input = stepsCell.createEl(\"input\", { type: \"number\" });\n      if (currentSteps) {\n        input.value = currentSteps.toString();\n      }\n\n      input.addEventListener(\"change\", async () => {\n        const newSteps = input.value.trim();\n        console.log(\"Updating steps for file:\", file.name, \"to:\", newSteps);\n        await this.plugin.updateStepsFrontmatter(file, newSteps);\n      });\n    }\n  }\n\n  private displayWeightTab(container: HTMLElement) {\n    const journalFolderName =\n      this.plugin.settings.journalFolderName || \"Journal\";\n    const journalFolder =\n      this.plugin.app.vault.getAbstractFileByPath(journalFolderName);\n\n    if (!journalFolder || !(journalFolder instanceof TFolder)) {\n      container.setText(`Journal folder \"${journalFolderName}\" not found.`);\n      return;\n    }\n\n    container.createEl(\"h3\", { text: \"Daily Weight\" });\n\n    const files = journalFolder.children.filter(\n      (f) => f instanceof TFile && f.extension === \"md\"\n    );\n\n    const dateFileMap = files\n      .map((file) => {\n        const match = file.name.match(/^(\\d{4})-(\\d{2})-(\\d{2})\\.md$/); // Match YYYY-MM-DD.md\n        if (!match) return null;\n        const [_, year, month, day] = match;\n        return { dateString: `${year}-${month}-${day}`, file };\n      })\n      .filter(Boolean) as { dateString: string; file: TFile }[];\n\n    dateFileMap.sort((a, b) => {\n      if (a.dateString < b.dateString) return -1;\n      if (a.dateString > b.dateString) return 1;\n      return 0;\n    });\n\n    const table = container.createEl(\"table\", { cls: \"habsiad-steps-table\" });\n    const thead = table.createEl(\"thead\");\n    const headerRow = thead.createEl(\"tr\");\n    headerRow.createEl(\"th\", { text: \"Date (YYYY/MM/DD)\" });\n    headerRow.createEl(\"th\", { text: \"Weight (kg)\" });\n\n    const tbody = table.createEl(\"tbody\");\n\n    for (const { dateString, file } of dateFileMap) {\n      const metadata = this.plugin.app.metadataCache.getFileCache(file);\n      const frontmatter = metadata?.frontmatter;\n      const currentWeight = frontmatter?.weight ?? \"\";\n\n      const row = tbody.createEl(\"tr\");\n      row.createEl(\"td\", { text: dateString.replace(/-/g, \"/\") });\n\n      const weightCell = row.createEl(\"td\");\n      const input = weightCell.createEl(\"input\", {\n        type: \"number\",\n        attr: {\n          step: \"0.1\", // Allow decimal values for more precise weight tracking\n        },\n      });\n      if (currentWeight) {\n        input.value = currentWeight.toString();\n      }\n\n      input.addEventListener(\"change\", async () => {\n        const newWeight = input.value.trim();\n        console.log(\"Updating weight for file:\", file.name, \"to:\", newWeight);\n        await this.plugin.updateWeightFrontmatter(file, newWeight);\n      });\n    }\n  }\n\n  private displayCaloriesTab(container: HTMLElement) {\n    const journalFolderName =\n      this.plugin.settings.journalFolderName || \"Journal\";\n    const journalFolder =\n      this.plugin.app.vault.getAbstractFileByPath(journalFolderName);\n\n    if (!journalFolder || !(journalFolder instanceof TFolder)) {\n      container.setText(`Journal folder \"${journalFolderName}\" not found.`);\n      return;\n    }\n\n    container.createEl(\"h3\", { text: \"Daily Calories\" });\n\n    // Add the Calculate Totals button\n    const calculateButton = container.createEl(\"button\", {\n      text: \"Calculate totals\",\n      cls: \"habsiad-sync-button\",\n    });\n    calculateButton.setAttr(\"style\", \"margin-bottom: 15px;\");\n\n    calculateButton.addEventListener(\"click\", async () => {\n      await this.plugin.calculateCalorieTotals();\n    });\n\n    const files = journalFolder.children.filter(\n      (f) => f instanceof TFile && f.extension === \"md\"\n    );\n\n    const dateFileMap = files\n      .map((file) => {\n        const match = file.name.match(/^(\\d{4})-(\\d{2})-(\\d{2})\\.md$/); // Match YYYY-MM-DD.md\n        if (!match) return null;\n        const [_, year, month, day] = match;\n        return { dateString: `${year}-${month}-${day}`, file };\n      })\n      .filter(Boolean) as { dateString: string; file: TFile }[];\n\n    dateFileMap.sort((a, b) => {\n      if (a.dateString < b.dateString) return -1;\n      if (a.dateString > b.dateString) return 1;\n      return 0;\n    });\n\n    const table = container.createEl(\"table\", { cls: \"habsiad-steps-table\" });\n    const thead = table.createEl(\"thead\");\n    const headerRow = thead.createEl(\"tr\");\n    headerRow.createEl(\"th\", { text: \"Date (YYYY/MM/DD)\" });\n    headerRow.createEl(\"th\", { text: \"Calories\" });\n\n    const tbody = table.createEl(\"tbody\");\n\n    for (const { dateString, file } of dateFileMap) {\n      const metadata = this.plugin.app.metadataCache.getFileCache(file);\n      const frontmatter = metadata?.frontmatter;\n      const currentCalories = frontmatter?.calories ?? \"\";\n\n      const row = tbody.createEl(\"tr\");\n      row.createEl(\"td\", { text: dateString.replace(/-/g, \"/\") });\n\n      const caloriesCell = row.createEl(\"td\");\n      const input = caloriesCell.createEl(\"input\", { type: \"number\" });\n      if (currentCalories) {\n        input.value = currentCalories.toString();\n      }\n\n      input.addEventListener(\"change\", async () => {\n        const newCalories = input.value.trim();\n        console.log(\n          \"Updating calories for file:\",\n          file.name,\n          \"to:\",\n          newCalories\n        );\n        await this.plugin.updateCaloriesFrontmatter(file, newCalories);\n      });\n    }\n  }\n\n  private async displayAlcoholTab(container: HTMLElement) {\n    const alcoholTab = new AlcoholTab(this.app, this.plugin);\n    await alcoholTab.render(container);\n  }\n\n  private async displayLabelsTab(container: HTMLElement) {\n    const labelsTab = new LabelsTab(this.plugin, container);\n    await labelsTab.render();\n  }\n\n  private async displayLogsTab(container: HTMLElement) {\n    const logsTab = new LogsTab(this.plugin, container);\n    await logsTab.render();\n  }\n\n  private displayInfoTab(container: HTMLElement) {\n    const infoSection = container.createDiv(\"habsiad-info-section\");\n\n    // Logo container with inline SVG\n    const logoContainer = infoSection.createDiv(\"habsiad-logo-container\");\n    logoContainer.innerHTML = `\n      <svg class=\"habsiad-logo\" width=\"180\" height=\"240\" viewBox=\"0 0 180 240\" xmlns=\"http://www.w3.org/2000/svg\">\n        <defs>\n          <!-- This creates the \"carved out\" effect. It cuts a hole in the shape of an H. -->\n          <clipPath id=\"h-cutout\">\n            <!-- The outer rectangle defines the visible area, and the inner H-path is subtracted from it. -->\n            <path d=\"M0,0 H180 V240 H0 Z M75,95 V145 H85 V125 H95 V145 H105 V95 H95 V115 H85 V95 Z\" />\n          </clipPath>\n        </defs>\n\n        <!-- Background Layer & Vase silhouette -->\n        <g fill=\"#1c1c1c\">\n          <!-- Main body of the vase -->\n          <path d=\"M50,230 C0,200 0,100 50,60 L50,40 C50,10 70,10 90,10 C110,10 130,10 130,40 L130,60 C180,100 180,200 130,230 Z\" />\n        </g>\n\n        <!-- Orange-red decorative panel with the H carved out -->\n        <g clip-path=\"url(#h-cutout)\">\n          <path fill=\"#D95737\" d=\"M50,215 C20,190 20,110 50,80 L130,80 C160,110 160,190 130,215 Z\" />\n        </g>\n        \n        <!-- Decorative Lines -->\n        <g fill=\"none\" stroke=\"#1c1c1c\" stroke-width=\"4\">\n            <line x1=\"50\" y1=\"80\" x2=\"130\" y2=\"80\" />\n            <line x1=\"50\" y1=\"215\" x2=\"130\" y2=\"215\" />\n        </g>\n\n        <!-- Handles -->\n        <g fill=\"#1c1c1c\">\n           <path d=\"M50,110 C25,110 25,150 50,150 L50,142 C35,142 35,118 50,118 Z\" />\n           <path d=\"M130,110 C155,110 155,150 130,150 L130,142 C145,142 145,118 130,118 Z\" />\n        </g>\n      </svg>\n    `;\n\n    // Version info\n    const pluginVersion = this.plugin.manifest.version;\n    const versionEl = infoSection.createEl(\"p\", {\n      text: `Version ${pluginVersion}`,\n      cls: \"habsiad-version\",\n    });\n\n    // Action buttons container\n    const buttonsContainer = infoSection.createDiv(\"habsiad-buttons-container\");\n\n    // Wiki button\n    const wikiButton = buttonsContainer.createEl(\"button\", {\n      text: \"📖 Open Wiki\",\n      cls: \"habsiad-action-button\",\n    });\n    wikiButton.addEventListener(\"click\", () => {\n      window.open(\"https://github.com/dotMavriQ/Habsiad/wiki\", \"_blank\");\n    });\n\n    // Settings button\n    const settingsButton = buttonsContainer.createEl(\"button\", {\n      text: \"⚙️ Plugin Settings\",\n      cls: \"habsiad-action-button\",\n    });\n    settingsButton.addEventListener(\"click\", () => {\n      // Open the plugin settings tab\n      (this.app as any).setting.open();\n      (this.app as any).setting.openTabById(\"habsiad\");\n    });\n\n    // Separator\n    infoSection.createEl(\"hr\");\n\n    // Thank you message\n    infoSection.createEl(\"p\", { text: \"Thank you for using Habsiad!\" });\n\n    // Add some spacing\n    infoSection.createEl(\"br\");\n\n    // Donation message\n    infoSection.createEl(\"small\", {\n      text: \"If you benefit from this plugin and feel like contributing to its development, please consider donating:\",\n    });\n\n    // Row break\n    infoSection.createEl(\"br\");\n\n    // Donation button container using a clickable image\n    const donationDiv = infoSection.createDiv(\"habsiad-donation\");\n    donationDiv.setAttr(\"style\", \"margin-top: 5px;\");\n\n    donationDiv.innerHTML =\n      '<a href=\"https://liberapay.com/dotMavriQ/donate\" target=\"_blank\"><img alt=\"Donate using Liberapay\" src=\"https://img.shields.io/liberapay/patrons/dotMavriQ.svg?logo=liberapay\"></a>';\n  }\n}\n","import { App, TFile, TFolder } from \"obsidian\";\nimport HabsiadPlugin from \"../../main\";\n\nexport interface AlcoholEntry {\n  dateString: string;\n  file: TFile;\n  alcoholEmojis: string[];\n}\n\nexport class AlcoholTab {\n  private app: App;\n  private plugin: HabsiadPlugin;\n\n  constructor(app: App, plugin: HabsiadPlugin) {\n    this.app = app;\n    this.plugin = plugin;\n  }\n\n  async render(container: HTMLElement): Promise<void> {\n    container.empty();\n\n    const journalFolderName =\n      this.plugin.settings.journalFolderName || \"Journal\";\n    const journalFolder =\n      this.app.vault.getAbstractFileByPath(journalFolderName);\n\n    if (!journalFolder || !(journalFolder instanceof TFolder)) {\n      container.createEl(\"p\", {\n        text: `Journal folder \"${journalFolderName}\" not found.`,\n        cls: \"habsiad-error-message\",\n      });\n      return;\n    }\n\n    container.createEl(\"h3\", { text: \"Alcohol Tracking\" });\n\n    const alcoholEntries = await this.scanForAlcoholEntries(journalFolder);\n\n    if (alcoholEntries.length === 0) {\n      container.createEl(\"p\", {\n        text: \"No alcohol entries found in your journal.\",\n        cls: \"habsiad-no-data\",\n      });\n      return;\n    }\n\n    const table = container.createEl(\"table\", { cls: \"habsiad-alcohol-table\" });\n    const thead = table.createEl(\"thead\");\n    const headerRow = thead.createEl(\"tr\");\n    headerRow.createEl(\"th\", { text: \"Date\" });\n    headerRow.createEl(\"th\", { text: \"Alcohol Consumption\" });\n\n    const tbody = table.createEl(\"tbody\");\n\n    for (const entry of alcoholEntries) {\n      const row = tbody.createEl(\"tr\", { cls: \"habsiad-clickable-row\" });\n\n      const dateCell = row.createEl(\"td\");\n      dateCell.createEl(\"span\", {\n        text: entry.dateString.replace(/-/g, \"/\"),\n        cls: \"habsiad-date-link\",\n      });\n\n      const alcoholCell = row.createEl(\"td\");\n      alcoholCell.createEl(\"span\", {\n        text: entry.alcoholEmojis.join(\" \"),\n        cls: \"habsiad-alcohol-emojis\",\n      });\n\n      // Make the row clickable\n      row.addEventListener(\"click\", () => {\n        this.openJournalEntry(entry.file);\n      });\n    }\n  }\n\n  private async scanForAlcoholEntries(\n    journalFolder: TFolder\n  ): Promise<AlcoholEntry[]> {\n    // List of alcohol-related emojis\n    const alcoholEmojiList = [\n      \"🍺\",\n      \"🍻\",\n      \"🍷\",\n      \"🍸\",\n      \"🍹\",\n      \"🥂\",\n      \"🍾\",\n      \"🥃\",\n      \"🍶\",\n    ];\n\n    const files = journalFolder.children.filter(\n      (f) => f instanceof TFile && f.extension === \"md\"\n    ) as TFile[];\n\n    const alcoholEntries: AlcoholEntry[] = [];\n\n    for (const file of files) {\n      const match = file.name.match(/^(\\d{4})-(\\d{2})-(\\d{2})\\.md$/);\n      if (!match) continue;\n\n      const [_, year, month, day] = match;\n      const dateString = `${year}-${month}-${day}`;\n\n      try {\n        const content = await this.app.vault.read(file);\n        const foundEmojis = this.extractAlcoholEmojis(\n          content,\n          alcoholEmojiList\n        );\n\n        if (foundEmojis.length > 0) {\n          alcoholEntries.push({\n            dateString,\n            file,\n            alcoholEmojis: foundEmojis,\n          });\n        }\n      } catch (error) {\n        console.error(`Error reading file ${file.name}:`, error);\n      }\n    }\n\n    // Sort entries by date (newest first)\n    alcoholEntries.sort((a, b) => {\n      if (a.dateString > b.dateString) return -1;\n      if (a.dateString < b.dateString) return 1;\n      return 0;\n    });\n\n    return alcoholEntries;\n  }\n\n  private extractAlcoholEmojis(\n    content: string,\n    alcoholEmojiList: string[]\n  ): string[] {\n    const foundEmojis: string[] = [];\n\n    // Split content into lines for easier processing\n    const lines = content.split(\"\\n\");\n    let inReflectionsSection = false;\n    let reflectionsContent = \"\";\n\n    for (const line of lines) {\n      // Check if we're starting a reflections section\n      if (line.match(/^###+?\\s*Reflections\\s*:?\\s*$/i)) {\n        inReflectionsSection = true;\n        continue;\n      }\n\n      // Check if we're hitting another section (stop collecting)\n      if (inReflectionsSection && line.match(/^###+?\\s*\\w+/)) {\n        break;\n      }\n\n      // Collect content if we're in reflections section\n      if (inReflectionsSection) {\n        reflectionsContent += line + \"\\n\";\n      }\n    }\n\n    // If we found reflections content, extract emojis\n    if (reflectionsContent.trim()) {\n      console.log(\"Found reflections content:\", reflectionsContent);\n\n      // Find all alcohol emojis in the order they appear in the text\n      const allMatches: Array<{ emoji: string; index: number }> = [];\n\n      for (const emoji of alcoholEmojiList) {\n        const regex = new RegExp(emoji, \"g\");\n        let match;\n        while ((match = regex.exec(reflectionsContent)) !== null) {\n          allMatches.push({\n            emoji: emoji,\n            index: match.index,\n          });\n        }\n      }\n\n      // Sort by index to maintain the order they appear in the text\n      allMatches.sort((a, b) => a.index - b.index);\n\n      // Extract just the emojis in order\n      foundEmojis.push(...allMatches.map((match) => match.emoji));\n\n      console.log(\"Found alcohol emojis:\", foundEmojis);\n    }\n\n    return foundEmojis;\n  }\n\n  private async openJournalEntry(file: TFile): Promise<void> {\n    const leaf = this.app.workspace.getUnpinnedLeaf();\n    await leaf.openFile(file);\n  }\n}\n","import { App, TFolder, TFile } from \"obsidian\";\nimport HabsiadPlugin from \"../../main\"; // Import plugin to access settings\n\nexport class DataQualityDiagnosticsView {\n  private app: App;\n  private plugin: HabsiadPlugin;\n\n  constructor(app: App, plugin: HabsiadPlugin) {\n    this.app = app;\n    this.plugin = plugin;\n  }\n\n  async render(): Promise<HTMLElement> {\n    const container = document.createElement(\"div\");\n    container.classList.add(\"data-quality-diagnostics\");\n\n    const table = document.createElement(\"table\");\n    table.classList.add(\"habsiad-diagnostics-table\");\n    table.setAttr(\"style\", \"margin: 10px 0;\");\n\n    // Table header with 8 columns: DATE, ⭐, 🔨, 🛠️, 🥗, 📗, 📘, 📙\n    const thead = table.createTHead();\n    const headerRow = thead.insertRow();\n    [\n      \"DATE\",\n      \"⭐\",\n      \"🔨\",\n      \"🛠️\",\n      \"🥗\",\n      \"📗\", // TODO\n      \"📘\", // Reflections\n      \"📙\", // Achievements & Dailies\n    ].forEach((text) => {\n      const th = document.createElement(\"th\");\n      th.textContent = text;\n      headerRow.appendChild(th);\n    });\n\n    const tbody = table.createTBody();\n    const journalFolder = this.getJournalFolder();\n\n    if (!journalFolder) {\n      const row = tbody.insertRow();\n      const cell = row.insertCell();\n      cell.colSpan = 8; // Span across all 8 columns\n      cell.textContent =\n        \"Journal folder not found. Please check your settings.\";\n    } else {\n      const files = this.getJournalFiles(journalFolder);\n      if (files.length === 0) {\n        const row = tbody.insertRow();\n        const cell = row.insertCell();\n        cell.colSpan = 8; // Span across all 8 columns\n        cell.textContent = \"No journal files found in the specified folder.\";\n      } else {\n        await this.processJournalFiles(files, tbody);\n      }\n    }\n\n    container.appendChild(table);\n    return container;\n  }\n\n  private async processJournalFiles(\n    files: TFile[],\n    tbody: HTMLTableSectionElement\n  ): Promise<void> {\n    for (const file of files) {\n      if (!(file instanceof TFile)) continue;\n\n      const row = tbody.insertRow();\n      const fileContent = await this.app.vault.read(file);\n\n      // Column A: Date\n      const dateCell = row.insertCell();\n      const dateLink = document.createElement(\"a\");\n      dateLink.textContent = file.basename.replace(\".md\", \"\");\n      dateLink.href = \"#\";\n      dateLink.style.textDecoration = \"none\";\n      dateLink.style.color = \"inherit\";\n      dateLink.style.cursor = \"pointer\";\n      dateLink.classList.add(\"date-link\");\n      dateLink.onclick = (e) => {\n        e.preventDefault();\n        this.app.workspace.openLinkText(file.path, \"\", true);\n      };\n      dateCell.appendChild(dateLink);\n\n      // Column B: Star (H5 headers)\n      const h5Cell = row.insertCell();\n      const h5Text = await this.extractH5Text(file);\n      if (h5Text) {\n        const starLink = document.createElement(\"a\");\n        starLink.textContent = \"⭐\";\n        starLink.href = \"#\";\n        starLink.title = h5Text;\n        starLink.style.textDecoration = \"none\";\n        starLink.style.cursor = \"pointer\";\n        starLink.classList.add(\"star-link\");\n        starLink.onclick = (e) => {\n          e.preventDefault();\n          this.app.workspace.openLinkText(file.path, \"\", true);\n        };\n        h5Cell.appendChild(starLink);\n      }\n\n      // Column C: Work Status\n      const workCell = row.insertCell();\n      const hasWorkHeader = fileContent.includes(\"## WORK:\");\n      const firstHeaderMatch = fileContent.match(/^# (.+)$/m);\n      const firstHeader = firstHeaderMatch\n        ? firstHeaderMatch[1].trim().toUpperCase()\n        : \"\";\n      const isWeekend = firstHeader === \"SATURDAY\" || firstHeader === \"SUNDAY\";\n\n      if (isWeekend && hasWorkHeader) {\n        workCell.textContent = \"❌\";\n        workCell.title = \"Work logged on a weekend\";\n      } else if (hasWorkHeader) {\n        workCell.textContent = \"🔨\";\n        workCell.title = \"Workday\";\n      } else if (h5Text) {\n        workCell.textContent = \"😃\";\n        workCell.title = \"Vacation or holiday\";\n      } else {\n        workCell.textContent = \"😌\";\n        workCell.title = \"Weekend\";\n      }\n\n      // Column D: Work Summary & Completed Tasks\n      const workSummaryCell = row.insertCell();\n      if (!hasWorkHeader) {\n        workSummaryCell.textContent = \"😌\";\n        workSummaryCell.title = \"No work logged\";\n      } else {\n        const summaryMatch = fileContent.match(\n          /###### Summary:\\n([\\s\\S]*?)\\n### Goals for Today:/\n        );\n        const summaryText = summaryMatch ? summaryMatch[1].trim() : \"\";\n        const wordCount = summaryText ? summaryText.split(/\\s+/).length : 0;\n        let summaryIndicator = \"❌\";\n        let summaryTooltip = \"Incomplete Summary\";\n\n        if (wordCount > 60) {\n          summaryIndicator = \"✅\";\n          summaryTooltip = \"Completed Summary\";\n        } else if (wordCount > 0) {\n          summaryIndicator = \"❗\";\n          summaryTooltip = \"Insufficient Summary\";\n        }\n\n        const goalsMatch = fileContent.match(\n          /### Goals for Today:\\n([\\s\\S]*?)\\n## LIFE:/\n        );\n        const goalsText = goalsMatch ? goalsMatch[1].trim() : \"\";\n        const completedTasks = (goalsText.match(/- \\[x\\]/g) || []).length;\n        let goalsIndicator = \"❌\";\n        let goalsTooltip = \"No goals in place\";\n\n        if (completedTasks > 0) {\n          goalsIndicator = `<b>${completedTasks}</b>`;\n          goalsTooltip = `${completedTasks} completed tasks`;\n        }\n\n        workSummaryCell.innerHTML = `${summaryIndicator}, ${goalsIndicator}`;\n        workSummaryCell.title = `${summaryTooltip}, ${goalsTooltip}`;\n      }\n\n      // Column E: Food Tracking\n      const foodCell = row.insertCell();\n      let mealCount = 0;\n      let totalCalories = 0;\n      const foodLines = fileContent.split(\"\\n\");\n      const foodIndex = foodLines.findIndex((line) =>\n        /^#+\\s*FOOD:$/i.test(line.trim())\n      );\n\n      if (foodIndex !== -1 && foodIndex + 3 < foodLines.length) {\n        let currentLineIndex = foodIndex + 3;\n        for (const mealType of [\"Breakfast\", \"Lunch\", \"Dinner\", \"Snacks\"]) {\n          if (currentLineIndex >= foodLines.length) break;\n          const mealRow = foodLines[currentLineIndex];\n          if (!mealRow.includes(\"|\")) {\n            currentLineIndex++;\n            continue;\n          }\n          let columns = mealRow.split(\"|\").map((col) => col.trim());\n          if (columns[0] === \"\") {\n            columns.shift();\n          }\n          if (columns[columns.length - 1] === \"\") {\n            columns.pop();\n          }\n          if (columns.length >= 3 && columns[0] === mealType) {\n            if (columns[1].length > 0) {\n              mealCount++;\n            }\n            if (/^\\d+$/.test(columns[2])) {\n              totalCalories += parseInt(columns[2], 10);\n            }\n          }\n          currentLineIndex++;\n        }\n      }\n      const mealEmojis = [\"0️⃣\", \"1️⃣\", \"2️⃣\", \"3️⃣\", \"4️⃣\"];\n      const displayEmoji = mealEmojis[Math.min(mealCount, 4)];\n      const emojiSpan = document.createElement(\"span\");\n      emojiSpan.textContent = displayEmoji;\n      emojiSpan.style.cursor = \"pointer\";\n      emojiSpan.classList.add(\"emoji-indicator\");\n      emojiSpan.title = `Total calories: ${totalCalories}`;\n      foodCell.appendChild(emojiSpan);\n\n      // Column F: TODO Section\n      const fCell = row.insertCell();\n      const todoMatch = fileContent.match(/### TODO:\\s*([\\s\\S]*?)(?=\\n###|$)/);\n      const todoSection = todoMatch ? todoMatch[1].trim() : \"\";\n      const todoLines = todoSection\n        .split(\"\\n\")\n        .map((line) => line.trim())\n        .filter((line) => line !== \"\");\n      const templateTasks = [\"- [ ] Task 1\", \"- [ ] Task 2\", \"- [ ] Task 3\"];\n      const isTemplate =\n        todoLines.length === templateTasks.length &&\n        templateTasks.every((task, i) => todoLines[i] === task);\n      const isEmpty = todoLines.length === 0;\n      if (isEmpty || isTemplate) {\n        fCell.textContent = \"❌\";\n        fCell.title = \"No updates: Only template tasks or empty TODO section.\";\n      } else {\n        const uncheckedTasks = todoLines.filter((line) =>\n          line.startsWith(\"- [ ]\")\n        );\n        const journalDate = file.basename.replace(\".md\", \"\");\n        const currentDate = new Date().toISOString().split(\"T\")[0];\n        if (journalDate !== currentDate && uncheckedTasks.length > 0) {\n          fCell.textContent = \"❗\";\n          fCell.title = \"Warning: Incomplete tasks from a previous day.\";\n        } else {\n          const checkedTasks = todoLines.filter((line) =>\n            /^- \\[[xX]\\]/.test(line)\n          );\n          const count = checkedTasks.length;\n          fCell.innerHTML = `<b>${count}</b>`;\n          fCell.title = `Amount of TODO-tasks cleared: ${count}`;\n        }\n      }\n\n      // Column G: Reflections\n      const gCell = row.insertCell();\n      let reflectionsSection = \"\";\n      const achievementsHeaderMatch = fileContent.match(/\\n## Achievements/);\n      if (achievementsHeaderMatch) {\n        const reflectionsMatch = fileContent.match(\n          /### Reflections:\\s*([\\s\\S]*?)(?=\\n## Achievements)/\n        );\n        reflectionsSection = reflectionsMatch ? reflectionsMatch[1].trim() : \"\";\n      } else {\n        const reflectionsStartMatch = fileContent.match(\n          /### Reflections:\\s*([\\s\\S]*)/\n        );\n        reflectionsSection = reflectionsStartMatch\n          ? reflectionsStartMatch[1].trim()\n          : \"\";\n      }\n      const reflectionLines = reflectionsSection\n        .split(\"\\n\")\n        .map((line) => line.trim())\n        .filter((line) => line !== \"\");\n      const bulletLines = reflectionLines.filter((line) =>\n        line.startsWith(\"- \")\n      );\n      // Use regex to match a template bullet (allowing minor variations)\n      const templatePattern = /- Thoughts or notes about personal life/i;\n      if (\n        bulletLines.length === 0 ||\n        (bulletLines.length === 1 && templatePattern.test(bulletLines[0]))\n      ) {\n        gCell.textContent = \"❌\";\n        gCell.title = \"no Reflections found\";\n      } else {\n        gCell.innerHTML = `<b>${bulletLines.length}</b>`;\n        gCell.title = `Amount of reflections: ${bulletLines.length}`;\n      }\n\n      // Column H: Achievements & Dailies\n      const hColCell = row.insertCell();\n      // Regexes to extract Achievements and Completed Dailies sections.\n      const achievementsRegex =\n        /## Achievements on\\s+([0-9]{4}-[0-9]{2}-[0-9]{2})([\\s\\S]*?)(?=\\n## Completed Dailies)/;\n      const dailiesRegex = /## Completed Dailies\\s*([\\s\\S]*)/;\n      const achievementsMatch = fileContent.match(achievementsRegex);\n      const dailiesMatch = fileContent.match(dailiesRegex);\n      if (!achievementsMatch || !dailiesMatch) {\n        hColCell.textContent = \"❌\";\n        hColCell.title = \"Achievements & Dailies not found\";\n      } else {\n        const achievementsDate = achievementsMatch[1].trim();\n        const fileDate = file.basename.replace(\".md\", \"\");\n        if (achievementsDate !== fileDate) {\n          hColCell.textContent = \"❗\";\n          hColCell.title = \"incorrect date set\";\n        } else {\n          // Count habit lines in the Achievements section.\n          const achievementsText = achievementsMatch[2];\n          const habitLines =\n            achievementsText.match(/^\\* Habit clicked:/gm) || [];\n          // Count daily lines in Completed Dailies (lines starting with \"* \" but not habit lines).\n          const dailiesText = dailiesMatch[1];\n          const dailyLines =\n            dailiesText.match(/^\\* (?!Habit clicked:)/gm) || [];\n          hColCell.innerHTML = `<b>${habitLines.length}, ${dailyLines.length}</b>`;\n          hColCell.title = `Habits: ${habitLines.length}, Dailies: ${dailyLines.length}`;\n        }\n      }\n    }\n  }\n\n  private getJournalFolder(): TFolder | null {\n    const folderName = this.plugin.settings.journalFolderName || \"Journal\";\n    const folder = this.app.vault.getAbstractFileByPath(folderName);\n    return folder instanceof TFolder ? folder : null;\n  }\n\n  private getJournalFiles(folder: TFolder): TFile[] {\n    return folder.children\n      .filter((f) => f instanceof TFile && f.extension === \"md\")\n      .map((f) => f as TFile)\n      .sort((a, b) => a.basename.localeCompare(b.basename));\n  }\n\n  private async extractH5Text(file: TFile): Promise<string | null> {\n    const content = await this.app.vault.read(file);\n    const match = content.match(/# .+?\\n([\\s\\S]*?)\\n## LIFE:/);\n    if (!match) return null;\n    const h5Lines = match[1]\n      .split(\"\\n\")\n      .filter((line) => line.startsWith(\"##### \") && !line.startsWith(\"######\"))\n      .map((line) => line.replace(\"##### \", \"\").trim());\n    return h5Lines.length > 0 ? h5Lines.join(\" \") : null;\n  }\n}\n","import { TFile, TFolder } from \"obsidian\";\nimport HabsiadPlugin from \"../../main\";\n\ninterface GlossaryEntry {\n  habiticaKey: string;\n  isDisabled: boolean;\n}\n\nlet glossaryMapping: { [key: string]: GlossaryEntry } = {};\nconst glossaryFileName = \"frontmatterGlossary.json\";\n// Hardcoded folder name since your plugin folder is \"Habsiad\"\nconst pluginFolder = \".obsidian/plugins/Habsiad\";\n\n/**\n * Loads the glossary mapping from frontmatterGlossary.json.\n * If the file doesn't exist, it creates an empty mapping and writes it.\n * Handles migration from old string-based format to new object format.\n */\nasync function loadGlossaryMapping(plugin: HabsiadPlugin): Promise<void> {\n  const glossaryPath = `${pluginFolder}/${glossaryFileName}`;\n  try {\n    const data = await plugin.app.vault.adapter.read(glossaryPath);\n    const parsedData = JSON.parse(data);\n\n    // Handle migration from old format (string values) to new format (object values)\n    if (Object.keys(parsedData).length > 0) {\n      const firstValue = Object.values(parsedData)[0];\n      if (typeof firstValue === \"string\") {\n        // Migrate old format to new format\n        console.log(\"Migrating glossary from old format to new format\");\n        for (const [key, value] of Object.entries(parsedData)) {\n          glossaryMapping[key] = {\n            habiticaKey: value as string,\n            isDisabled: false,\n          };\n        }\n        await saveGlossaryMapping(plugin); // Save in new format\n      } else {\n        // Already in new format\n        glossaryMapping = parsedData;\n      }\n    } else {\n      glossaryMapping = {};\n    }\n\n    console.log(\"Loaded glossary mapping:\", glossaryMapping);\n  } catch (error) {\n    console.warn(\n      \"Glossary file not found or unreadable. Creating a new one.\",\n      error\n    );\n    glossaryMapping = {};\n    await saveGlossaryMapping(plugin);\n  }\n}\n\n/**\n * Saves the current glossary mapping to frontmatterGlossary.json with 4-space indentation.\n */\nasync function saveGlossaryMapping(plugin: HabsiadPlugin): Promise<void> {\n  const glossaryPath = `${pluginFolder}/${glossaryFileName}`;\n  const json = JSON.stringify(glossaryMapping, null, 4);\n  await plugin.app.vault.adapter.write(glossaryPath, json);\n  console.log(\"Saved glossary mapping:\", glossaryMapping);\n}\n\n/**\n * Returns the Habitica key for a given frontmatter key.\n */\nexport function getHabiticaKey(key: string): string {\n  return glossaryMapping[key]?.habiticaKey || \"\";\n}\n\n/**\n * Returns whether a frontmatter key is marked as disabled (not gathered from Habitica).\n */\nexport function isKeyDisabled(key: string): boolean {\n  return glossaryMapping[key]?.isDisabled || false;\n}\n\n/**\n * Sets the disabled state for a frontmatter key.\n */\nexport async function setKeyDisabled(\n  plugin: HabsiadPlugin,\n  key: string,\n  disabled: boolean\n): Promise<void> {\n  if (!glossaryMapping[key]) {\n    glossaryMapping[key] = { habiticaKey: \"\", isDisabled: false };\n  }\n  glossaryMapping[key].isDisabled = disabled;\n  console.log(`Set disabled state for \"${key}\":`, disabled);\n  await saveGlossaryMapping(plugin);\n}\n\n/**\n * Saves a Habitica key for a given frontmatter key.\n */\nexport async function saveHabiticaKey(\n  plugin: HabsiadPlugin,\n  key: string,\n  value: string\n): Promise<void> {\n  if (!glossaryMapping[key]) {\n    glossaryMapping[key] = { habiticaKey: \"\", isDisabled: false };\n  }\n  glossaryMapping[key].habiticaKey = value;\n  console.log(`Saving Habitica key for frontmatter key \"${key}\":`, value);\n  await saveGlossaryMapping(plugin);\n}\n\nfunction getAllFrontmatterKeys(plugin: HabsiadPlugin): string[] {\n  const journalFolderName = plugin.settings.journalFolderName || \"Journal\";\n  const journalFolder =\n    plugin.app.vault.getAbstractFileByPath(journalFolderName);\n\n  if (!journalFolder || !(journalFolder instanceof TFolder)) {\n    console.warn(\"Journal folder not found:\", journalFolderName);\n    return [];\n  }\n\n  const files = journalFolder.children.filter(\n    (f) => f instanceof TFile && f.extension === \"md\"\n  ) as TFile[];\n\n  const currentYear = new Date().getFullYear();\n  const journalFiles = files.filter((file) =>\n    file.name.startsWith(`${currentYear}-`)\n  );\n\n  const frontmatterKeys = new Set<string>();\n\n  for (const file of journalFiles) {\n    const metadata = plugin.app.metadataCache.getFileCache(file);\n    if (metadata?.frontmatter) {\n      Object.keys(metadata.frontmatter).forEach((key) =>\n        frontmatterKeys.add(key)\n      );\n    }\n  }\n  return [...frontmatterKeys];\n}\n\n/**\n * Displays the glossary table in the provided container element.\n * The left column is now labeled \"Habitica Key\" and is editable,\n * while the right column displays the corresponding frontmatter key.\n */\nexport async function displayGlossaryTable(\n  container: HTMLElement,\n  plugin: HabsiadPlugin\n) {\n  await loadGlossaryMapping(plugin);\n\n  while (container.firstChild) {\n    container.removeChild(container.firstChild);\n  }\n\n  // Add the sync button at the top\n  const syncButton = container.createEl(\"button\", {\n    text: \"Sync Habitica to Frontmatter\",\n    cls: \"habsiad-sync-button\",\n  });\n  syncButton.setAttr(\"style\", \"margin-bottom: 15px;\");\n\n  syncButton.addEventListener(\"click\", () => {\n    plugin.syncHabiticaToFrontmatter();\n  });\n\n  const table = container.createEl(\"table\", {\n    cls: \"habsiad-glossary-table\",\n  });\n  const thead = table.createEl(\"thead\");\n  const headerRow = thead.createEl(\"tr\");\n  // Updated header text:\n  headerRow.createEl(\"th\", { text: \"Habitica Key\" });\n  headerRow.createEl(\"th\", { text: \"Frontmatter Key\" });\n\n  const tbody = table.createEl(\"tbody\");\n  const uniqueKeys = getAllFrontmatterKeys(plugin);\n  console.log(\"Unique frontmatter keys:\", uniqueKeys);\n\n  if (uniqueKeys.length === 0) {\n    const row = tbody.createEl(\"tr\");\n    const cell = row.createEl(\"td\", { text: \"No frontmatter keys found.\" });\n    cell.colSpan = 2;\n  } else {\n    for (const key of uniqueKeys) {\n      const row = tbody.createEl(\"tr\");\n\n      // Column A: Editable field for the Habitica key.\n      const nameCell = row.createEl(\"td\");\n      const input = nameCell.createEl(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Habitica key\",\n        value: getHabiticaKey(key),\n      });\n\n      input.addEventListener(\"change\", async () => {\n        const userValue = input.value.trim();\n        console.log(\n          `User entered Habitica key for frontmatter key \"${key}\":`,\n          userValue\n        );\n        await saveHabiticaKey(plugin, key, userValue);\n      });\n\n      // Column B: Clickable frontmatter key that can lock the input field.\n      const keyCell = row.createEl(\"td\");\n      keyCell.setText(key);\n      keyCell.addClass(\"locked\");\n      keyCell.addClass(\"clickable-frontmatter-key\");\n\n      // Check if this key has a stored Habitica value (protection mode)\n      const hasStoredValue = getHabiticaKey(key).trim().length > 0;\n      const isCurrentlyDisabled = isKeyDisabled(key);\n\n      if (hasStoredValue) {\n        // Protected mode: entries with values can't be clicked to disable\n        keyCell.style.cursor = \"not-allowed\";\n        keyCell.style.opacity = \"0.6\";\n        keyCell.classList.add(\"protected-entry\");\n      } else {\n        // Normal mode: empty entries can be clicked to toggle disabled state\n        keyCell.style.cursor = \"pointer\";\n\n        // Initialize the display based on stored disabled state\n        if (isCurrentlyDisabled) {\n          input.value = \"Data is not gathered from Habitica\";\n          input.disabled = true;\n          input.style.fontStyle = \"italic\";\n          input.style.color = \"var(--text-muted)\";\n          input.style.backgroundColor =\n            \"var(--background-modifier-form-field-highlighted)\";\n          keyCell.style.backgroundColor = \"var(--background-modifier-accent)\";\n        }\n\n        keyCell.addEventListener(\"click\", async () => {\n          // Double-check that no value was added since initialization\n          const currentValue = getHabiticaKey(key).trim();\n          if (currentValue.length > 0) {\n            // Value was added, switch to protected mode\n            keyCell.style.cursor = \"not-allowed\";\n            keyCell.style.opacity = \"0.6\";\n            keyCell.classList.add(\"protected-entry\");\n            return;\n          }\n\n          const currentlyDisabled = isKeyDisabled(key);\n\n          if (!currentlyDisabled) {\n            // Lock the input field and save state\n            input.value = \"Data is not gathered from Habitica\";\n            input.disabled = true;\n            input.style.fontStyle = \"italic\";\n            input.style.color = \"var(--text-muted)\";\n            input.style.backgroundColor =\n              \"var(--background-modifier-form-field-highlighted)\";\n            keyCell.style.backgroundColor = \"var(--background-modifier-accent)\";\n            await setKeyDisabled(plugin, key, true);\n          } else {\n            // Unlock the input field and save state\n            input.value = \"\";\n            input.disabled = false;\n            input.style.fontStyle = \"\";\n            input.style.color = \"\";\n            input.style.backgroundColor = \"\";\n            keyCell.style.backgroundColor = \"\";\n            await setKeyDisabled(plugin, key, false);\n          }\n        });\n      }\n    }\n  }\n}\n","import { TFile, TFolder } from \"obsidian\";\nimport type HabsiadPlugin from \"../../main\";\n\ninterface LabelData {\n  emoji: string;\n  count: number;\n  examples: string[];\n  files: Array<{\n    fileName: string;\n    date: string;\n    filePath: string;\n    occurrences: string[];\n  }>;\n}\n\nexport class LabelsTab {\n  private plugin: HabsiadPlugin;\n  private container: HTMLElement;\n  private currentView: \"overview\" | \"detail\" = \"overview\";\n  private selectedLabel: LabelData | null = null;\n\n  constructor(plugin: HabsiadPlugin, container: HTMLElement) {\n    this.plugin = plugin;\n    this.container = container;\n  }\n\n  async render() {\n    this.container.empty();\n\n    if (this.currentView === \"overview\") {\n      await this.renderOverview();\n    } else if (this.currentView === \"detail\" && this.selectedLabel) {\n      this.renderDetailView(this.selectedLabel);\n    }\n  }\n\n  private async renderOverview() {\n    // Create header\n    const header = this.container.createDiv({ cls: \"tab-header\" });\n    header.createEl(\"h3\", { text: \"🏷️ Labels\" });\n\n    // Create loading indicator\n    const loadingDiv = this.container.createDiv({ cls: \"loading-indicator\" });\n    loadingDiv.createEl(\"p\", { text: \"Scanning journal files for labels...\" });\n\n    try {\n      // Scan for labels\n      const labels = await this.scanForLabels();\n\n      // Remove loading indicator\n      loadingDiv.remove();\n\n      if (labels.length === 0) {\n        const noDataDiv = this.container.createDiv({ cls: \"no-data\" });\n        noDataDiv.createEl(\"p\", { text: \"No labels found in journal files.\" });\n        return;\n      }\n\n      // Create labels grid\n      const labelsGrid = this.container.createDiv({ cls: \"labels-grid\" });\n\n      // Sort labels by count (descending) and then alphabetically\n      labels.sort((a, b) => {\n        if (b.count !== a.count) {\n          return b.count - a.count;\n        }\n        return a.emoji.localeCompare(b.emoji);\n      });\n\n      // Create buttons for each label\n      for (const label of labels) {\n        const labelButton = labelsGrid.createEl(\"button\", {\n          cls: \"label-button\",\n          title: `${label.emoji} - Found ${label.count} time(s)`,\n        });\n\n        // Add emoji and count\n        const emojiSpan = labelButton.createSpan({ cls: \"label-emoji\" });\n        emojiSpan.textContent = label.emoji;\n\n        const countSpan = labelButton.createSpan({ cls: \"label-count\" });\n        countSpan.textContent = `(${label.count})`;\n\n        // Click handler to show detailed view\n        labelButton.addEventListener(\"click\", () => {\n          this.selectedLabel = label;\n          this.currentView = \"detail\";\n          this.render();\n        });\n      }\n\n      // Add summary\n      const summaryDiv = this.container.createDiv({ cls: \"labels-summary\" });\n      summaryDiv.createEl(\"p\", {\n        text: `Found ${labels.length} unique labels across all journal files.`,\n        cls: \"summary-text\",\n      });\n    } catch (error) {\n      loadingDiv.remove();\n      console.error(\"Error scanning for labels:\", error);\n\n      const errorDiv = this.container.createDiv({ cls: \"error-message\" });\n      errorDiv.createEl(\"p\", {\n        text: \"Error scanning journal files. Check console for details.\",\n      });\n    }\n  }\n\n  private renderDetailView(label: LabelData) {\n    // Create header with back button\n    const header = this.container.createDiv({ cls: \"tab-header\" });\n    const titleContainer = header.createDiv({ cls: \"detail-header\" });\n\n    const backButton = titleContainer.createEl(\"button\", {\n      text: \"← Back\",\n      cls: \"back-button\",\n    });\n    backButton.addEventListener(\"click\", () => {\n      this.currentView = \"overview\";\n      this.selectedLabel = null;\n      this.render();\n    });\n\n    titleContainer.createEl(\"h3\", { text: `${label.emoji} Label Details` });\n\n    // Sort files chronologically (earliest first)\n    const sortedFiles = [...label.files].sort((a, b) =>\n      a.date.localeCompare(b.date)\n    );\n\n    // Create files list\n    const filesContainer = this.container.createDiv({\n      cls: \"label-files-container\",\n    });\n\n    filesContainer.createEl(\"h4\", {\n      text: `Found in ${sortedFiles.length} journal entries:`,\n      cls: \"files-header\",\n    });\n\n    const filesList = filesContainer.createDiv({ cls: \"files-list\" });\n\n    for (const file of sortedFiles) {\n      const fileItem = filesList.createDiv({ cls: \"file-item\" });\n\n      // Date link (clickable)\n      const dateLink = fileItem.createEl(\"button\", {\n        text: file.date,\n        cls: \"date-link-button\",\n      });\n\n      dateLink.addEventListener(\"click\", async () => {\n        // Open the file\n        const fileToOpen = this.plugin.app.vault.getAbstractFileByPath(\n          file.filePath\n        );\n        if (fileToOpen instanceof TFile) {\n          await this.plugin.app.workspace.getLeaf().openFile(fileToOpen);\n        }\n      });\n\n      // Show occurrences in this file\n      const occurrencesList = fileItem.createDiv({ cls: \"occurrences-list\" });\n      for (const occurrence of file.occurrences) {\n        const occurrenceSpan = occurrencesList.createSpan({\n          text: occurrence,\n          cls: \"occurrence-item\",\n        });\n      }\n    }\n\n    // Add summary\n    const summaryDiv = this.container.createDiv({ cls: \"labels-summary\" });\n    summaryDiv.createEl(\"p\", {\n      text: `Total occurrences: ${label.count} across ${sortedFiles.length} journal entries.`,\n      cls: \"summary-text\",\n    });\n  }\n\n  private async scanForLabels(): Promise<LabelData[]> {\n    const journalFolderName =\n      this.plugin.settings.journalFolderName || \"Journal\";\n    const journalFolder =\n      this.plugin.app.vault.getAbstractFileByPath(journalFolderName);\n\n    console.log(`Looking for journal folder: ${journalFolderName}`);\n\n    if (!journalFolder || !(journalFolder instanceof TFolder)) {\n      throw new Error(`Journal folder \"${journalFolderName}\" not found.`);\n    }\n\n    // Get all journal files recursively with YYYY-MM-DD.md format\n    const journalFiles = this.getJournalFilesRecursively(journalFolder);\n\n    console.log(\n      `Found ${journalFiles.length} journal files to scan (including subfolders):`,\n      journalFiles.map((f: TFile) => f.path)\n    );\n\n    const labelMap = new Map<string, LabelData>();\n\n    // Pattern to match labels: `emoji: value`\n    // Much more precise - emoji must be followed immediately by colon and space, then a short value\n    const potentialLabelPattern = /`([^\\s`]+):\\s+([^`]{1,50})`/g;\n\n    for (const file of journalFiles) {\n      try {\n        const content = await this.plugin.app.vault.read(file);\n\n        // Look for Work Summary section\n        const workSummaryMatch = content.match(\n          /## Work Summary([\\s\\S]*?)(?=\\n##|$)/\n        );\n\n        // Look for Reflections section (with or without colon)\n        const reflectionsMatch = content.match(\n          /## Reflections:?([\\s\\S]*?)(?=\\n##|$)/\n        );\n\n        const sectionsToScan = [];\n        if (workSummaryMatch) {\n          sectionsToScan.push(workSummaryMatch[1]);\n          console.log(`Found Work Summary in ${file.name}`);\n        }\n        if (reflectionsMatch) {\n          sectionsToScan.push(reflectionsMatch[1]);\n          console.log(`Found Reflections in ${file.name}`);\n        }\n\n        if (sectionsToScan.length === 0) {\n          console.log(`No relevant sections found in ${file.name}`);\n          // Let's also check what sections DO exist\n          const allHeaders = content.match(/^## .+$/gm);\n          console.log(`Headers found in ${file.name}:`, allHeaders);\n        }\n\n        // Scan each relevant section\n        for (const section of sectionsToScan) {\n          let match;\n          while ((match = potentialLabelPattern.exec(section)) !== null) {\n            const emoji = match[1].trim();\n            const value = match[2].trim();\n            const fullMatch = match[0];\n\n            // Strict validation for proper labels\n            // 1. Emoji part must be a single emoji (no spaces, no long text)\n            // 2. Emoji part must contain actual emoji characters\n            // 3. Value part should be short (likely a number or brief text)\n\n            // Check if emoji part is a single token (no spaces or long text)\n            if (emoji.includes(\" \") || emoji.length > 10) {\n              console.log(\n                `Skipping multi-word or long emoji part: ${fullMatch} in ${file.name}`\n              );\n              continue;\n            }\n\n            // Check if it contains actual emoji characters\n            const isEmoji =\n              /[\\u{1F600}-\\u{1F64F}\\u{1F300}-\\u{1F5FF}\\u{1F680}-\\u{1F6FF}\\u{1F1E0}-\\u{1F1FF}\\u{2600}-\\u{26FF}\\u{2700}-\\u{27BF}\\u{1F900}-\\u{1F9FF}\\u{1F018}-\\u{1F270}]|[\\u{238C}\\u{2B06}\\u{2B07}\\u{2B1B}\\u{2B1C}\\u{2B50}\\u{2B55}\\u{3030}\\u{303D}\\u{3297}\\u{3299}]/u.test(\n                emoji\n              );\n\n            if (!isEmoji) {\n              console.log(\n                `Skipping non-emoji label: ${fullMatch} in ${file.name}`\n              );\n              continue;\n            }\n\n            // Check if value looks like a label value (short, not a sentence)\n            if (value.length > 50 || value.split(\" \").length > 8) {\n              console.log(\n                `Skipping long value that doesn't look like a label: ${fullMatch} in ${file.name}`\n              );\n              continue;\n            }\n\n            // Additional check: if value contains certain words that indicate it's not a label\n            const nonLabelWords = [\n              \"was\",\n              \"were\",\n              \"had\",\n              \"have\",\n              \"did\",\n              \"would\",\n              \"could\",\n              \"should\",\n              \"playing\",\n              \"watching\",\n            ];\n            if (\n              nonLabelWords.some((word) => value.toLowerCase().includes(word))\n            ) {\n              console.log(\n                `Skipping narrative text that's not a label: ${fullMatch} in ${file.name}`\n              );\n              continue;\n            }\n\n            console.log(\n              `Found valid emoji label: ${fullMatch} in ${file.name}`\n            );\n\n            // Process the validated emoji label\n            if (emoji) {\n              // Extract date from filename (YYYY-MM-DD)\n              const dateMatch = file.name.match(/^(\\d{4}-\\d{2}-\\d{2})/);\n              const date = dateMatch ? dateMatch[1] : file.name;\n\n              if (labelMap.has(emoji)) {\n                const existing = labelMap.get(emoji)!;\n                existing.count++;\n                // Store a few examples (limit to 5)\n                if (existing.examples.length < 5) {\n                  existing.examples.push(fullMatch);\n                }\n\n                // Check if we already have this file recorded\n                const existingFile = existing.files.find(\n                  (f) => f.fileName === file.name\n                );\n                if (existingFile) {\n                  existingFile.occurrences.push(fullMatch);\n                } else {\n                  existing.files.push({\n                    fileName: file.name,\n                    date: date,\n                    filePath: file.path,\n                    occurrences: [fullMatch],\n                  });\n                }\n              } else {\n                labelMap.set(emoji, {\n                  emoji,\n                  count: 1,\n                  examples: [fullMatch],\n                  files: [\n                    {\n                      fileName: file.name,\n                      date: date,\n                      filePath: file.path,\n                      occurrences: [fullMatch],\n                    },\n                  ],\n                });\n              }\n            }\n          }\n        }\n      } catch (error) {\n        console.error(`Error reading file ${file.path}:`, error);\n      }\n    }\n\n    return Array.from(labelMap.values());\n  }\n\n  private getJournalFilesRecursively(folder: TFolder): TFile[] {\n    const journalFiles: TFile[] = [];\n\n    const processFolder = (currentFolder: TFolder) => {\n      for (const child of currentFolder.children) {\n        if (child instanceof TFile) {\n          // Check if file matches journal format YYYY-MM-DD.md\n          if (child.name.match(/^\\d{4}-\\d{2}-\\d{2}\\.md$/)) {\n            journalFiles.push(child);\n          }\n        } else if (child instanceof TFolder) {\n          // Recursively process subfolders\n          processFolder(child);\n        }\n      }\n    };\n\n    processFolder(folder);\n    return journalFiles;\n  }\n}\n","import { TFile, TFolder } from \"obsidian\";\nimport type HabsiadPlugin from \"../../main\";\n\ninterface LogData {\n  type: string;\n  count: number;\n  entries: Array<{\n    fileName: string;\n    date: string;\n    filePath: string;\n    title: string;\n    content: string;\n    hasImage: boolean;\n    imagePath?: string;\n  }>;\n}\n\nexport class LogsTab {\n  private plugin: HabsiadPlugin;\n  private container: HTMLElement;\n  private currentView: \"overview\" | \"detail\" = \"overview\";\n  private selectedLog: LogData | null = null;\n\n  constructor(plugin: HabsiadPlugin, container: HTMLElement) {\n    this.plugin = plugin;\n    this.container = container;\n  }\n\n  async render() {\n    this.container.empty();\n\n    if (this.currentView === \"overview\") {\n      await this.renderOverview();\n    } else if (this.currentView === \"detail\" && this.selectedLog) {\n      this.renderDetailView(this.selectedLog);\n    }\n  }\n\n  private async renderOverview() {\n    // Create header\n    const header = this.container.createDiv({ cls: \"tab-header\" });\n    header.createEl(\"h3\", { text: \"📔 Logs\" });\n\n    // Create loading indicator\n    const loadingDiv = this.container.createDiv({ cls: \"loading-indicator\" });\n    loadingDiv.createEl(\"p\", { text: \"Scanning journal files for logs...\" });\n\n    try {\n      // Scan for logs\n      const logs = await this.scanForLogs();\n\n      // Remove loading indicator\n      loadingDiv.remove();\n\n      if (logs.length === 0) {\n        const noDataDiv = this.container.createDiv({ cls: \"no-data\" });\n        noDataDiv.createEl(\"p\", { text: \"No logs found in journal files.\" });\n        return;\n      }\n\n      // Create logs grid\n      const logsGrid = this.container.createDiv({ cls: \"logs-grid\" });\n\n      // Sort logs by count (descending) and then alphabetically\n      logs.sort((a, b) => {\n        if (b.count !== a.count) {\n          return b.count - a.count;\n        }\n        return a.type.localeCompare(b.type);\n      });\n\n      // Create buttons for each log type\n      for (const log of logs) {\n        const logButton = logsGrid.createEl(\"button\", {\n          cls: \"log-button\",\n          title: `${log.type} - Found ${log.count} entries`,\n        });\n\n        // Add type name (in bold caps) and count\n        const typeSpan = logButton.createSpan({ cls: \"log-type\" });\n        typeSpan.textContent = log.type.toUpperCase();\n\n        const countSpan = logButton.createSpan({ cls: \"log-count\" });\n        countSpan.textContent = `(${log.count})`;\n\n        // Click handler to show detailed view\n        logButton.addEventListener(\"click\", () => {\n          this.selectedLog = log;\n          this.currentView = \"detail\";\n          this.render();\n        });\n      }\n\n      // Add summary\n      const summaryDiv = this.container.createDiv({ cls: \"logs-summary\" });\n      summaryDiv.createEl(\"p\", {\n        text: `Found ${logs.length} log types across all journal files.`,\n        cls: \"summary-text\",\n      });\n    } catch (error) {\n      loadingDiv.remove();\n      console.error(\"Error scanning for logs:\", error);\n\n      const errorDiv = this.container.createDiv({ cls: \"error-message\" });\n      errorDiv.createEl(\"p\", {\n        text: \"Error scanning journal files. Check console for details.\",\n      });\n    }\n  }\n\n  private renderDetailView(log: LogData) {\n    // Create header with back button\n    const header = this.container.createDiv({ cls: \"tab-header\" });\n    const titleContainer = header.createDiv({ cls: \"detail-header\" });\n\n    const backButton = titleContainer.createEl(\"button\", {\n      text: \"← Back\",\n      cls: \"back-button\",\n    });\n    backButton.addEventListener(\"click\", () => {\n      this.currentView = \"overview\";\n      this.selectedLog = null;\n      this.render();\n    });\n\n    titleContainer.createEl(\"h3\", { text: `${log.type.toUpperCase()} Logs` });\n\n    // Sort entries chronologically (earliest first)\n    const sortedEntries = [...log.entries].sort((a, b) =>\n      a.date.localeCompare(b.date)\n    );\n\n    // Create entries container\n    const entriesContainer = this.container.createDiv({\n      cls: \"log-entries-container\",\n    });\n\n    entriesContainer.createEl(\"h4\", {\n      text: `Found ${sortedEntries.length} entries:`,\n      cls: \"entries-header\",\n    });\n\n    const entriesList = entriesContainer.createDiv({ cls: \"entries-list\" });\n\n    for (const entry of sortedEntries) {\n      const entryCard = entriesList.createDiv({ cls: \"entry-card\" });\n\n      // Entry header with date and title\n      const entryHeader = entryCard.createDiv({ cls: \"entry-header\" });\n\n      const dateButton = entryHeader.createEl(\"button\", {\n        text: entry.date,\n        cls: \"entry-date-button\",\n      });\n\n      dateButton.addEventListener(\"click\", async () => {\n        // Open the file\n        const fileToOpen = this.plugin.app.vault.getAbstractFileByPath(\n          entry.filePath\n        );\n        if (fileToOpen instanceof TFile) {\n          await this.plugin.app.workspace.getLeaf().openFile(fileToOpen);\n        }\n      });\n\n      if (entry.title) {\n        entryHeader.createEl(\"h5\", {\n          text: entry.title,\n          cls: \"entry-title\",\n        });\n      }\n\n      // Entry content\n      const entryContent = entryCard.createDiv({ cls: \"entry-content\" });\n\n      // Show image if available\n      if (entry.hasImage && entry.imagePath) {\n        const imageContainer = entryContent.createDiv({ cls: \"entry-image\" });\n\n        let resolvedImagePath = entry.imagePath;\n\n        // Handle different image path formats\n        if (\n          !resolvedImagePath.includes(\"/\") &&\n          !resolvedImagePath.includes(\"\\\\\")\n        ) {\n          // If it's just a filename, look in common attachment folders\n          const possiblePaths = [\n            entry.imagePath,\n            `attachments/${entry.imagePath}`,\n            `assets/${entry.imagePath}`,\n            `images/${entry.imagePath}`,\n            `_attachments/${entry.imagePath}`,\n          ];\n\n          for (const path of possiblePaths) {\n            const file = this.plugin.app.vault.getAbstractFileByPath(path);\n            if (file) {\n              resolvedImagePath = path;\n              break;\n            }\n          }\n        }\n\n        // Try to find the image file\n        const imageFile =\n          this.plugin.app.vault.getAbstractFileByPath(resolvedImagePath);\n        if (imageFile) {\n          const img = imageContainer.createEl(\"img\", {\n            cls: \"log-entry-image\",\n            attr: { alt: \"Log image\" },\n          });\n\n          // Use Obsidian's resource path resolver\n          const resourcePath =\n            this.plugin.app.vault.adapter.getResourcePath(resolvedImagePath);\n          img.src = resourcePath;\n\n          // Add error handling for broken images\n          img.addEventListener(\"error\", () => {\n            console.log(`Failed to load image: ${resolvedImagePath}`);\n            imageContainer.style.display = \"none\";\n          });\n\n          // Add success handling\n          img.addEventListener(\"load\", () => {\n            console.log(`Successfully loaded image: ${resolvedImagePath}`);\n          });\n        } else {\n          console.log(`Image file not found: ${resolvedImagePath}`);\n        }\n      }\n\n      // Show content preview (first 200 characters)\n      const contentPreview =\n        entry.content.length > 200\n          ? entry.content.substring(0, 200) + \"...\"\n          : entry.content;\n\n      entryContent.createEl(\"p\", {\n        text: contentPreview,\n        cls: \"entry-text\",\n      });\n    }\n\n    // Add summary\n    const summaryDiv = this.container.createDiv({ cls: \"logs-summary\" });\n    summaryDiv.createEl(\"p\", {\n      text: `Total ${log.type.toLowerCase()} entries: ${log.count}.`,\n      cls: \"summary-text\",\n    });\n  }\n\n  private async scanForLogs(): Promise<LogData[]> {\n    const journalFolderName =\n      this.plugin.settings.journalFolderName || \"Journal\";\n    const journalFolder =\n      this.plugin.app.vault.getAbstractFileByPath(journalFolderName);\n\n    console.log(`Looking for journal folder: ${journalFolderName}`);\n\n    if (!journalFolder || !(journalFolder instanceof TFolder)) {\n      throw new Error(`Journal folder \"${journalFolderName}\" not found.`);\n    }\n\n    // Get all journal files recursively with YYYY-MM-DD.md format\n    const journalFiles = this.getJournalFilesRecursively(journalFolder);\n\n    console.log(\n      `Found ${journalFiles.length} journal files to scan (including subfolders):`,\n      journalFiles.map((f: TFile) => f.path)\n    );\n\n    const logMap = new Map<string, LogData>();\n\n    // Pattern to match Obsidian callouts: > [!TYPE] #### Title\n    const calloutPattern = />\\s*\\[!([^\\]]+)\\]\\s*(.*?)$/gm;\n\n    for (const file of journalFiles) {\n      try {\n        const content = await this.plugin.app.vault.read(file);\n\n        // Look for Reflections section (with or without colon)\n        const reflectionsMatch = content.match(\n          /## Reflections:?([\\s\\S]*?)(?=\\n##|$)/\n        );\n\n        if (!reflectionsMatch) {\n          console.log(`No Reflections section found in ${file.name}`);\n          continue;\n        }\n\n        console.log(`Found Reflections in ${file.name}`);\n        const reflectionsSection = reflectionsMatch[1];\n\n        // Find all callout blocks in the reflections section\n        let match;\n        while ((match = calloutPattern.exec(reflectionsSection)) !== null) {\n          const logType = match[1].trim().toLowerCase();\n          const titleLine = match[2].trim();\n\n          console.log(`Found callout: [!${logType}] in ${file.name}`);\n\n          // Extract the full callout block\n          const calloutStart = match.index;\n          const fullCalloutMatch = this.extractFullCallout(\n            reflectionsSection,\n            calloutStart\n          );\n\n          if (!fullCalloutMatch) continue;\n\n          const {\n            content: fullContent,\n            hasImage,\n            imagePath,\n          } = fullCalloutMatch;\n\n          // Extract title from the title line (remove #### if present)\n          const title = titleLine.replace(/^#+\\s*/, \"\");\n\n          // Extract date from filename (YYYY-MM-DD)\n          const dateMatch = file.name.match(/^(\\d{4}-\\d{2}-\\d{2})/);\n          const date = dateMatch ? dateMatch[1] : file.name;\n\n          if (logMap.has(logType)) {\n            const existing = logMap.get(logType)!;\n            existing.count++;\n            existing.entries.push({\n              fileName: file.name,\n              date: date,\n              filePath: file.path,\n              title: title,\n              content: fullContent,\n              hasImage: hasImage,\n              imagePath: imagePath,\n            });\n          } else {\n            logMap.set(logType, {\n              type: logType,\n              count: 1,\n              entries: [\n                {\n                  fileName: file.name,\n                  date: date,\n                  filePath: file.path,\n                  title: title,\n                  content: fullContent,\n                  hasImage: hasImage,\n                  imagePath: imagePath,\n                },\n              ],\n            });\n          }\n        }\n      } catch (error) {\n        console.error(`Error reading file ${file.path}:`, error);\n      }\n    }\n\n    return Array.from(logMap.values());\n  }\n\n  private extractFullCallout(\n    text: string,\n    startIndex: number\n  ): { content: string; hasImage: boolean; imagePath?: string } | null {\n    const lines = text.substring(startIndex).split(\"\\n\");\n    const calloutLines: string[] = [];\n    let hasImage = false;\n    let imagePath: string | undefined;\n\n    for (const line of lines) {\n      if (line.startsWith(\">\")) {\n        calloutLines.push(line.substring(1).trim());\n\n        // Check for image references - both Obsidian [[]] and markdown ![]() formats\n        const obsidianImageMatch = line.match(/!\\[\\[([^\\]]+)\\]\\]/);\n        const markdownImageMatch = line.match(/!\\[.*?\\]\\(([^)]+)\\)/);\n\n        if (obsidianImageMatch) {\n          hasImage = true;\n          imagePath = obsidianImageMatch[1];\n        } else if (markdownImageMatch) {\n          hasImage = true;\n          imagePath = markdownImageMatch[1];\n        }\n      } else if (line.trim() === \"\") {\n        // Empty lines are part of the callout if we're inside one\n        if (calloutLines.length > 0) {\n          calloutLines.push(\"\");\n        }\n      } else {\n        // Non-callout line, end of callout block\n        break;\n      }\n    }\n\n    if (calloutLines.length === 0) return null;\n\n    const content = calloutLines.join(\"\\n\").trim();\n    return { content, hasImage, imagePath };\n  }\n\n  private getJournalFilesRecursively(folder: TFolder): TFile[] {\n    const journalFiles: TFile[] = [];\n\n    const processFolder = (currentFolder: TFolder) => {\n      for (const child of currentFolder.children) {\n        if (child instanceof TFile) {\n          // Check if file matches journal format YYYY-MM-DD.md\n          if (child.name.match(/^\\d{4}-\\d{2}-\\d{2}\\.md$/)) {\n            journalFiles.push(child);\n          }\n        } else if (child instanceof TFolder) {\n          // Recursively process subfolders\n          processFolder(child);\n        }\n      }\n    };\n\n    processFolder(folder);\n    return journalFiles;\n  }\n}\n","module.exports = require(\"obsidian\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {\n  App,\n  Plugin,\n  Notice,\n  TFile,\n  MarkdownView,\n  WorkspaceLeaf,\n  TFolder,\n  TAbstractFile,\n  Modal,\n  Setting,\n} from \"obsidian\";\nimport { HabiticaService } from \"./habitica/habiticaService\";\nimport { SidebarView, VIEW_TYPE_SIDEBAR } from \"./views/sidebarView\";\nimport {\n  HabsiadSettingTab,\n  DEFAULT_SETTINGS,\n  HabsiadSettings,\n} from \"./settings\";\nimport { SettingsSync } from \"./utils/settingsSync\";\n\n// RetroTagger modal for adding achievements and dailies to journal entries\nclass RetroTaggerModal extends Modal {\n  private plugin: HabsiadPlugin;\n  private selectedItems: { [key: string]: string } = {}; // key -> \"achievement\" or \"daily\"\n  private itemButtons: { [key: string]: HTMLElement } = {};\n  private journalDate: string;\n\n  constructor(app: App, plugin: HabsiadPlugin) {\n    super(app);\n    this.plugin = plugin;\n    this.journalDate = \"\";\n  }\n\n  async onOpen() {\n    const { contentEl } = this;\n    contentEl.empty();\n\n    // Get current file to check if it's a journal entry\n    const activeFile = this.app.workspace.getActiveFile();\n    if (!activeFile) {\n      contentEl.createEl(\"div\", { text: \"No file is currently open.\" });\n      return;\n    }\n\n    // Check if the file is in the journal folder and has the YYYY-MM-DD.md format\n    const journalFolderName =\n      this.plugin.settings.journalFolderName || \"Journal\";\n    const filePathLower = activeFile.path.toLowerCase();\n    const journalFolderLower = journalFolderName.toLowerCase();\n\n    if (!filePathLower.startsWith(`${journalFolderLower}/`)) {\n      contentEl.createEl(\"div\", {\n        text: `This file is not in the ${journalFolderName} folder.`,\n      });\n      return;\n    }\n\n    const match = activeFile.name.match(/^(\\d{4}-\\d{2}-\\d{2})\\.md$/);\n    if (!match) {\n      contentEl.createEl(\"div\", {\n        text: \"This file is not a valid journal entry (YYYY-MM-DD.md format required).\",\n      });\n      return;\n    }\n\n    this.journalDate = match[1];\n\n    // Create the main container for the retrotagger UI\n    const mainContainer = contentEl.createDiv({ cls: \"retrotagger-container\" });\n\n    // Add header\n    mainContainer.createEl(\"h2\", { text: `RetroTagger - ${this.journalDate}` });\n\n    // Add instructions\n    const instructionsDiv = mainContainer.createDiv({\n      cls: \"retrotagger-instructions\",\n    });\n    instructionsDiv.createEl(\"p\", {\n      text: \"Items already in this journal entry are pre-selected and highlighted.\",\n    });\n    instructionsDiv.createEl(\"p\", {\n      text: \"Click once on an item to add it to Achievements (blue).\",\n    });\n    instructionsDiv.createEl(\"p\", {\n      text: \"Click twice on an item to add it to Dailies (green).\",\n    });\n    instructionsDiv.createEl(\"p\", { text: \"Click a third time to deselect.\" });\n\n    // Create container for Habitica items\n    const itemsContainer = mainContainer.createDiv({\n      cls: \"retrotagger-items\",\n    });\n\n    // Load the glossary to get Habitica keys\n    const habiticaKeys = await this.loadHabiticaKeys();\n\n    // Create buttons for each Habitica item\n    for (const habiticaKey of habiticaKeys) {\n      if (!habiticaKey) continue;\n\n      const itemButton = itemsContainer.createEl(\"button\", {\n        text: habiticaKey,\n        cls: \"retrotagger-item\",\n      });\n\n      this.itemButtons[habiticaKey] = itemButton;\n\n      itemButton.addEventListener(\"click\", () => {\n        this.toggleItemSelection(habiticaKey);\n      });\n    }\n\n    // Load existing achievements and dailies from the current file\n    await this.loadExistingEntries(activeFile);\n\n    // Create the \"Preview\" section to show what will be added\n    const summaryContainer = mainContainer.createDiv({\n      cls: \"retrotagger-summary\",\n    });\n    summaryContainer.createEl(\"h3\", { text: \"Preview\" });\n\n    const achievementsDiv = summaryContainer.createDiv({\n      cls: \"retrotagger-achievements\",\n    });\n    achievementsDiv.createEl(\"h4\", {\n      text: `Achievements on ${this.journalDate}`,\n      cls: \"retrotagger-preview-header\",\n    });\n    const achievementsList = achievementsDiv.createEl(\"ul\", {\n      cls: \"retrotagger-achievements-list\",\n    });\n\n    const dailiesDiv = summaryContainer.createDiv({\n      cls: \"retrotagger-dailies\",\n    });\n    dailiesDiv.createEl(\"h4\", {\n      text: \"Completed Dailies\",\n      cls: \"retrotagger-preview-header\",\n    });\n    const dailiesList = dailiesDiv.createEl(\"ul\", {\n      cls: \"retrotagger-dailies-list\",\n    });\n\n    // Update summary to show loaded existing entries\n    this.updateSummary();\n\n    // Add the \"RetroTag\" button\n    const renderButton = mainContainer.createEl(\"button\", {\n      text: \"RetroTag\",\n      cls: \"retrotagger-render-button\",\n    });\n\n    renderButton.addEventListener(\"click\", async () => {\n      await this.renderSelectedItems();\n      this.close();\n    });\n\n    // Add \"Cancel\" button\n    const cancelButton = mainContainer.createEl(\"button\", {\n      text: \"Cancel\",\n      cls: \"retrotagger-cancel-button\",\n    });\n\n    cancelButton.addEventListener(\"click\", () => {\n      this.close();\n    });\n\n    // Add CSS for the RetroTagger UI\n    this.addRetroTaggerStyles();\n  }\n\n  // Load Habitica keys from the glossary\n  private async loadHabiticaKeys(): Promise<string[]> {\n    const pluginFolder = \".obsidian/plugins/Habsiad\";\n    const glossaryFileName = \"frontmatterGlossary.json\";\n    const glossaryPath = `${pluginFolder}/${glossaryFileName}`;\n\n    try {\n      const data = await this.app.vault.adapter.read(glossaryPath);\n      const glossaryMapping = JSON.parse(data);\n\n      // Extract unique Habitica keys, handling both old and new format\n      let habiticaKeys: string[] = [];\n      for (const value of Object.values(glossaryMapping)) {\n        if (typeof value === \"string\") {\n          // Old format: string values\n          if (value !== \"\") habiticaKeys.push(value);\n        } else if (typeof value === \"object\" && value !== null) {\n          // New format: object with habiticaKey property\n          const entry = value as { habiticaKey?: string; isDisabled?: boolean };\n          if (\n            entry.habiticaKey &&\n            entry.habiticaKey !== \"\" &&\n            !entry.isDisabled\n          ) {\n            habiticaKeys.push(entry.habiticaKey);\n          }\n        }\n      }\n      return habiticaKeys;\n    } catch (error) {\n      console.error(\"Error loading glossary:\", error);\n      return [];\n    }\n  }\n\n  // Load existing achievements and dailies from the current file\n  private async loadExistingEntries(file: TFile) {\n    try {\n      const content = await this.app.vault.read(file);\n\n      // Parse existing achievements\n      const achievementsRegex = new RegExp(\n        `## Achievements on ${this.journalDate}([\\\\s\\\\S]*?)(?=\\\\n##|$)`\n      );\n      const achievementsMatch = content.match(achievementsRegex);\n\n      if (achievementsMatch) {\n        const achievementsSection = achievementsMatch[1];\n        // Look for lines like \"* Habit clicked: HABIT_NAME - Positive: 1, Negative: 0\"\n        const habitLines = achievementsSection.match(\n          /\\* Habit clicked: ([^-]+)/g\n        );\n\n        if (habitLines) {\n          for (const line of habitLines) {\n            const habitMatch = line.match(/\\* Habit clicked: ([^-]+)/);\n            if (habitMatch) {\n              const habitName = habitMatch[1].trim();\n              if (this.itemButtons[habitName]) {\n                this.selectedItems[habitName] = \"achievement\";\n                this.itemButtons[habitName].addClass(\n                  \"retrotagger-item-achievement\"\n                );\n              }\n            }\n          }\n        }\n      }\n\n      // Parse existing completed dailies\n      const dailiesRegex = /## Completed Dailies([\\s\\S]*?)(?=\\n##|$)/;\n      const dailiesMatch = content.match(dailiesRegex);\n\n      if (dailiesMatch) {\n        const dailiesSection = dailiesMatch[1];\n        // Look for lines like \"* DAILY_NAME\"\n        const dailyLines = dailiesSection.match(/^\\* (.+)$/gm);\n\n        if (dailyLines) {\n          for (const line of dailyLines) {\n            const dailyMatch = line.match(/^\\* (.+)$/);\n            if (dailyMatch) {\n              const dailyName = dailyMatch[1].trim();\n              // Skip habit lines that might be in the dailies section\n              if (\n                !dailyName.startsWith(\"Habit clicked:\") &&\n                this.itemButtons[dailyName]\n              ) {\n                this.selectedItems[dailyName] = \"daily\";\n                this.itemButtons[dailyName].addClass(\"retrotagger-item-daily\");\n              }\n            }\n          }\n        }\n      }\n\n      // Note: updateSummary() will be called after the summary container is created\n    } catch (error) {\n      console.error(\"Error loading existing entries:\", error);\n    }\n  }\n\n  // Toggle item selection between Achievement, Daily, and None\n  private toggleItemSelection(key: string) {\n    const button = this.itemButtons[key];\n\n    if (!this.selectedItems[key]) {\n      // First click: Select as Achievement (blue)\n      this.selectedItems[key] = \"achievement\";\n      button.removeClass(\"retrotagger-item-daily\");\n      button.addClass(\"retrotagger-item-achievement\");\n    } else if (this.selectedItems[key] === \"achievement\") {\n      // Second click: Change to Daily (green)\n      this.selectedItems[key] = \"daily\";\n      button.removeClass(\"retrotagger-item-achievement\");\n      button.addClass(\"retrotagger-item-daily\");\n    } else {\n      // Third click: Deselect\n      delete this.selectedItems[key];\n      button.removeClass(\"retrotagger-item-achievement\");\n      button.removeClass(\"retrotagger-item-daily\");\n    }\n\n    this.updateSummary();\n  }\n\n  // Update the summary section with selected items\n  private updateSummary() {\n    const achievementsList = this.contentEl.querySelector(\n      \".retrotagger-achievements-list\"\n    ) as HTMLElement;\n    const dailiesList = this.contentEl.querySelector(\n      \".retrotagger-dailies-list\"\n    ) as HTMLElement;\n\n    if (achievementsList) achievementsList.empty();\n    if (dailiesList) dailiesList.empty();\n\n    for (const [key, type] of Object.entries(this.selectedItems)) {\n      if (type === \"achievement\" && achievementsList) {\n        achievementsList.createEl(\"li\", { text: key });\n      } else if (type === \"daily\" && dailiesList) {\n        dailiesList.createEl(\"li\", { text: key });\n      }\n    }\n  }\n\n  // Render the selected items to the journal entry\n  private async renderSelectedItems() {\n    try {\n      const activeFile = this.app.workspace.getActiveFile();\n      if (!activeFile) {\n        new Notice(\"No file is currently open.\");\n        return;\n      }\n\n      let content = await this.app.vault.read(activeFile);\n\n      // Group items by type, separating new from existing\n      const newAchievements: string[] = [];\n      const newDailies: string[] = [];\n\n      // Parse existing entries to avoid duplicates\n      const existingAchievements = await this.getExistingAchievements(content);\n      const existingDailies = await this.getExistingDailies(content);\n\n      for (const [key, type] of Object.entries(this.selectedItems)) {\n        if (type === \"achievement\" && !existingAchievements.includes(key)) {\n          newAchievements.push(key);\n        } else if (type === \"daily\" && !existingDailies.includes(key)) {\n          newDailies.push(key);\n        }\n      }\n\n      // Create the new sections\n      let newContent = \"\";\n\n      // Check if the file already has the Achievements section\n      const achievementsRegex = new RegExp(\n        `## Achievements on ${this.journalDate}`\n      );\n      const hasAchievementsSection = achievementsRegex.test(content);\n\n      // Check if the file already has the Completed Dailies section\n      const dailiesRegex = /## Completed Dailies/;\n      const hasCompletedDailiesSection = dailiesRegex.test(content);\n\n      if (newAchievements.length > 0) {\n        if (hasAchievementsSection) {\n          // Append to existing Achievements section\n          const achievementsSectionRegex = new RegExp(\n            `(## Achievements on ${this.journalDate}[\\\\s\\\\S]*?)(?=\\\\n##|$)`\n          );\n          const match = content.match(achievementsSectionRegex);\n\n          if (match) {\n            const existingSection = match[1];\n            const newSection =\n              existingSection +\n              \"\\n\" +\n              newAchievements\n                .map(\n                  (item: string) =>\n                    `* Habit clicked: ${item} - Positive: 1, Negative: 0`\n                )\n                .join(\"\\n\");\n            content = content.replace(existingSection, newSection);\n          }\n        } else {\n          // Create new Achievements section\n          newContent += `\\n## Achievements on ${this.journalDate}\\n`;\n          newContent += newAchievements\n            .map(\n              (item: string) =>\n                `* Habit clicked: ${item} - Positive: 1, Negative: 0`\n            )\n            .join(\"\\n\");\n        }\n      }\n\n      if (newDailies.length > 0) {\n        if (hasCompletedDailiesSection) {\n          // Append to existing Completed Dailies section\n          const dailiesSectionRegex = /## Completed Dailies[\\s\\S]*?(?=\\n##|$)/;\n          const match = content.match(dailiesSectionRegex);\n\n          if (match) {\n            const existingSection = match[0];\n            const newSection =\n              existingSection +\n              \"\\n\" +\n              newDailies.map((item: string) => `* ${item}`).join(\"\\n\");\n            content = content.replace(existingSection, newSection);\n          }\n        } else {\n          // Create new Completed Dailies section\n          if (!hasAchievementsSection || newAchievements.length === 0) {\n            newContent += \"\\n## Completed Dailies\\n\";\n          } else {\n            newContent += \"\\n\\n## Completed Dailies\\n\";\n          }\n          newContent += newDailies\n            .map((item: string) => `* ${item}`)\n            .join(\"\\n\");\n        }\n      }\n\n      // If we didn't modify existing sections, append the new content\n      if (\n        !hasAchievementsSection &&\n        !hasCompletedDailiesSection &&\n        newContent\n      ) {\n        content += newContent;\n      }\n\n      // Save the changes\n      await this.app.vault.modify(activeFile, content);\n\n      const totalItems = Object.keys(this.selectedItems).length;\n      const newItemCount = newAchievements.length + newDailies.length;\n\n      if (newItemCount > 0) {\n        new Notice(\n          `Successfully updated journal entry for ${this.journalDate}. Added ${newItemCount} new items (${totalItems} total selected).`\n        );\n      } else {\n        new Notice(\n          `Journal entry for ${this.journalDate} already contains all selected items.`\n        );\n      }\n    } catch (error) {\n      console.error(\"Error rendering selected items:\", error);\n      new Notice(\"Error updating journal entry. See console for details.\");\n    }\n  }\n\n  // Get existing achievements from content\n  private async getExistingAchievements(content: string): Promise<string[]> {\n    const achievements: string[] = [];\n    const achievementsRegex = new RegExp(\n      `## Achievements on ${this.journalDate}([\\\\s\\\\S]*?)(?=\\\\n##|$)`\n    );\n    const achievementsMatch = content.match(achievementsRegex);\n\n    if (achievementsMatch) {\n      const achievementsSection = achievementsMatch[1];\n      const habitLines = achievementsSection.match(\n        /\\* Habit clicked: ([^-]+)/g\n      );\n\n      if (habitLines) {\n        for (const line of habitLines) {\n          const habitMatch = line.match(/\\* Habit clicked: ([^-]+)/);\n          if (habitMatch) {\n            achievements.push(habitMatch[1].trim());\n          }\n        }\n      }\n    }\n\n    return achievements;\n  }\n\n  // Get existing dailies from content\n  private async getExistingDailies(content: string): Promise<string[]> {\n    const dailies: string[] = [];\n    const dailiesRegex = /## Completed Dailies([\\s\\S]*?)(?=\\n##|$)/;\n    const dailiesMatch = content.match(dailiesRegex);\n\n    if (dailiesMatch) {\n      const dailiesSection = dailiesMatch[1];\n      const dailyLines = dailiesSection.match(/^\\* (.+)$/gm);\n\n      if (dailyLines) {\n        for (const line of dailyLines) {\n          const dailyMatch = line.match(/^\\* (.+)$/);\n          if (dailyMatch) {\n            const dailyName = dailyMatch[1].trim();\n            // Skip habit lines that might be in the dailies section\n            if (!dailyName.startsWith(\"Habit clicked:\")) {\n              dailies.push(dailyName);\n            }\n          }\n        }\n      }\n    }\n\n    return dailies;\n  }\n\n  // Add CSS styles for the RetroTagger UI\n  private addRetroTaggerStyles() {\n    const styles = document.createElement(\"style\");\n    styles.id = \"retrotagger-styles\";\n    styles.textContent = `\n      .retrotagger-container {\n        padding: 16px;\n      }\n      \n      .retrotagger-instructions {\n        margin-bottom: 16px;\n        padding: 8px;\n        background-color: var(--background-secondary);\n        border-radius: 4px;\n      }\n      \n      .retrotagger-items {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 8px;\n        margin-bottom: 16px;\n      }\n      \n      .retrotagger-item {\n        padding: 8px 12px;\n        border-radius: 4px;\n        background-color: var(--background-secondary);\n        border: none;\n        cursor: pointer;\n      }\n      \n      .retrotagger-item-achievement {\n        background-color: #3498db;\n        color: white;\n      }\n      \n      .retrotagger-item-daily {\n        background-color: #2ecc71;\n        color: white;\n      }\n      \n      .retrotagger-summary {\n        margin-bottom: 16px;\n        padding: 8px;\n        background-color: var(--background-secondary);\n        border-radius: 4px;\n      }\n      \n      .retrotagger-preview-header {\n        color: #fabd2f;\n        margin-top: 12px;\n        margin-bottom: 8px;\n      }\n      \n      .retrotagger-render-button,\n      .retrotagger-cancel-button {\n        padding: 8px 16px;\n        border-radius: 4px;\n        border: none;\n        cursor: pointer;\n        margin-right: 8px;\n      }\n      \n      .retrotagger-render-button {\n        background-color: var(--interactive-accent);\n        color: var(--text-on-accent);\n      }\n      \n      .retrotagger-cancel-button {\n        background-color: var(--background-modifier-error);\n        color: white;\n      }\n    `;\n\n    document.head.appendChild(styles);\n  }\n\n  onClose() {\n    // Clean up styles\n    const styleEl = document.getElementById(\"retrotagger-styles\");\n    if (styleEl) styleEl.remove();\n\n    const { contentEl } = this;\n    contentEl.empty();\n  }\n}\n\nexport default class HabsiadPlugin extends Plugin {\n  public habiticaService!: HabiticaService;\n  public settings: HabsiadSettings = DEFAULT_SETTINGS; // ✅ Ensures initialization\n  private settingsSync!: SettingsSync;\n\n  async onload() {\n    console.log(\"Loading Habsiad Plugin\");\n\n    // Initialize settings sync\n    this.settingsSync = new SettingsSync(this);\n\n    // Load settings (with cross-device sync support)\n    await this.loadSettings();\n\n    // Initialize Habitica Service\n    this.habiticaService = new HabiticaService(this);\n\n    // Add settings tab\n    this.addSettingTab(new HabsiadSettingTab(this.app, this));\n\n    // Register the sidebar view\n    this.registerView(\n      VIEW_TYPE_SIDEBAR,\n      (leaf: WorkspaceLeaf) => new SidebarView(leaf, this)\n    );\n\n    // Activate the sidebar view\n    this.app.workspace.onLayoutReady(() => {\n      this.activateSidebar();\n    });\n\n    // Register commands with customizable hotkeys\n    this.addCommand({\n      id: \"generate-habits-and-dailies\",\n      name: \"Generate Habits & Dailies\",\n      callback: () => this.generateHabitsAndDailies(),\n      hotkeys: [this.settings.shortcuts.generateHabitsAndDailies],\n    });\n\n    // Register the command to replace {WEEKDAY} with the correct day (Manual Trigger)\n    this.addCommand({\n      id: \"replace-weekday\",\n      name: \"Replace {WEEKDAY} with Actual Day\",\n      callback: () => this.replaceWeekday(),\n      hotkeys: [this.settings.shortcuts.replaceWeekday],\n    });\n\n    // Register the TODO-Sync command\n    this.addCommand({\n      id: \"sync-todo\",\n      name: \"Sync Habitica TODO\",\n      callback: () => this.syncTodo(),\n      hotkeys: [this.settings.shortcuts.syncTodo],\n    });\n\n    // Register the Habitica to Frontmatter sync command\n    this.addCommand({\n      id: \"sync-habitica-to-frontmatter\",\n      name: \"Sync Habitica to Frontmatter\",\n      callback: () => this.syncHabiticaToFrontmatter(),\n      hotkeys: [this.settings.shortcuts.syncHabiticaToFrontmatter],\n    });\n\n    // Register the Calculate Calorie Totals command\n    this.addCommand({\n      id: \"calculate-calorie-totals\",\n      name: \"Calculate Calorie Totals\",\n      callback: () => this.calculateCalorieTotals(),\n      hotkeys: [this.settings.shortcuts.calculateCalorieTotals],\n    });\n\n    // Register the Retrotagger command\n    this.addCommand({\n      id: \"open-retrotagger\",\n      name: \"Open Retrotagger\",\n      callback: () => this.openRetrotagger(),\n      hotkeys: [this.settings.shortcuts.openRetrotagger],\n    });\n\n    // Register settings sync commands\n    this.addCommand({\n      id: \"import-settings-from-sync\",\n      name: \"Import Settings from Sync File\",\n      callback: () => this.settingsSync.importFromSyncFile(),\n    });\n\n    this.addCommand({\n      id: \"export-settings-to-sync\",\n      name: \"Export Settings to Sync File\",\n      callback: () => this.settingsSync.exportToSyncFile(),\n    });\n\n    // Automatically replace {WEEKDAY} when a new file is created in the JOURNAL folder,\n    // but only if the file contains the \"# {WEEKDAY}\" placeholder.\n    this.registerEvent(\n      this.app.vault.on(\"create\", async (file) => {\n        if (!(file instanceof TFile)) return;\n\n        const journalFolderName = this.settings.journalFolderName || \"Journal\";\n        if (file.path.startsWith(`${journalFolderName}/`)) {\n          // Read the file content to check for the placeholder\n          const content = await this.app.vault.read(file);\n          if (content.includes(\"# {WEEKDAY}\")) {\n            this.replaceWeekday(file);\n          }\n        }\n      })\n    );\n  }\n\n  onunload() {\n    console.log(\"Unloading Habsiad Plugin\");\n    this.app.workspace.detachLeavesOfType(VIEW_TYPE_SIDEBAR);\n  }\n\n  async activateSidebar() {\n    if (this.app.workspace.getLeavesOfType(VIEW_TYPE_SIDEBAR).length === 0) {\n      const rightLeaf = this.app.workspace.getRightLeaf(true);\n      if (rightLeaf) {\n        await rightLeaf.setViewState({\n          type: VIEW_TYPE_SIDEBAR,\n        });\n      } else {\n        console.error(\"Failed to get or create the right leaf.\");\n      }\n    }\n  }\n\n  async loadSettings() {\n    const loadedSettings = await this.settingsSync.loadSettings();\n    this.settings = Object.assign({}, DEFAULT_SETTINGS, loadedSettings);\n\n    // Migration: Ensure alcohol tab is enabled by default if it doesn't exist\n    if (\n      this.settings.showTabs &&\n      this.settings.showTabs.alcohol === undefined\n    ) {\n      this.settings.showTabs.alcohol = true;\n      await this.saveSettings();\n    }\n  }\n\n  async saveSettings() {\n    await this.settingsSync.saveSettings(this.settings);\n  }\n\n  /**\n   * Opens the RetroTagger modal for the current journal entry.\n   * Allows users to retroactively add achievements and dailies to journal entries.\n   */\n  openRetrotagger() {\n    const modal = new RetroTaggerModal(this.app, this);\n    modal.open();\n  }\n\n  async generateHabitsAndDailies() {\n    const activeView = this.app.workspace.getActiveViewOfType(MarkdownView);\n    if (!activeView) {\n      new Notice(\"Please open a Markdown file to insert Habitica data.\");\n      return;\n    }\n\n    const file = activeView.file;\n    if (!file) {\n      new Notice(\"No file is open. Please open a Markdown file.\");\n      return;\n    }\n\n    const journalFolderName = this.settings.journalFolderName || \"Journal\";\n    if (\n      !file.path.toLowerCase().startsWith(`${journalFolderName.toLowerCase()}/`)\n    ) {\n      new Notice(\n        `This command can only be used in the ${journalFolderName} folder.`\n      );\n      return;\n    }\n\n    const fileNamePattern = /^\\d{4}-\\d{2}-\\d{2}\\.md$/;\n    if (!fileNamePattern.test(file.name)) {\n      new Notice(\"This command can only be used in daily journal notes.\");\n      return;\n    }\n\n    const { habiticaUserId, habiticaApiToken } = this.settings;\n    if (!habiticaUserId || !habiticaApiToken) {\n      new Notice(\n        \"Please enter your Habitica credentials in the Habsiad settings.\"\n      );\n      return;\n    }\n\n    await this.insertHabitsAndDailies(activeView);\n  }\n\n  async saveCustomFrontmatterName(key: string, value: string) {\n    if (!this.settings.customFrontmatter) {\n      this.settings.customFrontmatter = {};\n    }\n    this.settings.customFrontmatter[key] = value;\n    await this.saveSettings();\n  }\n\n  getCustomFrontmatterName(key: string): string {\n    return this.settings.customFrontmatter?.[key] || \"\";\n  }\n\n  async insertHabitsAndDailies(activeView: MarkdownView) {\n    try {\n      const tasks = await this.habiticaService.getTasks();\n\n      const habitsOutput = tasks\n        .filter(\n          (task) =>\n            task.type === \"habit\" &&\n            (task.counterUp > 0 || task.counterDown > 0)\n        )\n        .map(\n          (task) =>\n            `* Habit clicked: ${task.text} - Positive: ${task.counterUp}, Negative: ${task.counterDown}`\n        )\n        .join(\"\\n\");\n\n      const dailiesOutput = tasks\n        .filter((task) => task.type === \"daily\" && task.completed)\n        .map((task) => `* ${task.text}`)\n        .join(\"\\n\");\n\n      const today = window.moment().format(\"YYYY-MM-DD\");\n      const output = `## Achievements on ${today}\\n${habitsOutput}\\n\\n## Completed Dailies\\n${dailiesOutput}`;\n\n      const editor = activeView.editor;\n      editor.replaceRange(output, editor.getCursor());\n\n      new Notice(\"Habits and Dailies inserted successfully.\");\n    } catch (error) {\n      new Notice(\"Failed to fetch Habitica tasks. Check console for details.\");\n      console.error(\"Error fetching Habitica tasks:\", error);\n    }\n  }\n\n  /**\n   * Updates the \"steps\" field inside the frontmatter of a journal entry.\n   * If frontmatter exists, modifies the \"steps\" field.\n   * If frontmatter is missing, adds it to the file.\n   */\n  async updateStepsFrontmatter(file: TFile, newSteps: string) {\n    let content = await this.app.vault.read(file);\n\n    // Locate frontmatter section\n    const frontmatterRegex = /^---\\n([\\s\\S]*?)\\n---/;\n    const match = content.match(frontmatterRegex);\n    let newContent;\n\n    if (match) {\n      const frontmatterText = match[1];\n\n      // Modify the \"steps\" value or insert if not found\n      const updatedFrontmatter = frontmatterText\n        .split(\"\\n\")\n        .map((line) =>\n          line.startsWith(\"steps:\") ? `steps: ${newSteps}` : line\n        )\n        .join(\"\\n\");\n\n      newContent = content.replace(\n        frontmatterRegex,\n        `---\\n${updatedFrontmatter}\\n---`\n      );\n    } else {\n      // If no frontmatter exists, create it\n      newContent = `---\\nsteps: ${newSteps}\\n---\\n\\n${content}`;\n    }\n\n    // Save the updated file\n    await this.app.vault.modify(file, newContent);\n  }\n\n  /**\n   * Updates the \"weight\" field inside the frontmatter of a journal entry.\n   * If frontmatter exists, modifies the \"weight\" field.\n   * If frontmatter is missing, adds it to the file.\n   */\n  async updateWeightFrontmatter(file: TFile, newWeight: string) {\n    let content = await this.app.vault.read(file);\n\n    // Locate frontmatter section\n    const frontmatterRegex = /^---\\n([\\s\\S]*?)\\n---/;\n    const match = content.match(frontmatterRegex);\n    let newContent;\n\n    if (match) {\n      const frontmatterText = match[1];\n\n      // Check if the \"weight\" field already exists\n      const hasWeightField = frontmatterText\n        .split(\"\\n\")\n        .some((line) => line.startsWith(\"weight:\"));\n\n      if (hasWeightField) {\n        // Modify the existing \"weight\" value\n        const updatedFrontmatter = frontmatterText\n          .split(\"\\n\")\n          .map((line) =>\n            line.startsWith(\"weight:\") ? `weight: ${newWeight}` : line\n          )\n          .join(\"\\n\");\n\n        newContent = content.replace(\n          frontmatterRegex,\n          `---\\n${updatedFrontmatter}\\n---`\n        );\n      } else {\n        // Add the \"weight\" field to the existing frontmatter\n        const updatedFrontmatter = frontmatterText + `\\nweight: ${newWeight}`;\n        newContent = content.replace(\n          frontmatterRegex,\n          `---\\n${updatedFrontmatter}\\n---`\n        );\n      }\n    } else {\n      // If no frontmatter exists, create it\n      newContent = `---\\nweight: ${newWeight}\\n---\\n\\n${content}`;\n    }\n\n    // Save the updated file\n    await this.app.vault.modify(file, newContent);\n  }\n\n  /**\n   * Updates the \"calories\" field inside the frontmatter of a journal entry.\n   * If frontmatter exists, modifies the \"calories\" field.\n   * If frontmatter is missing, adds it to the file.\n   */\n  async updateCaloriesFrontmatter(file: TFile, newCalories: string) {\n    let content = await this.app.vault.read(file);\n\n    // Locate frontmatter section\n    const frontmatterRegex = /^---\\n([\\s\\S]*?)\\n---/;\n    const match = content.match(frontmatterRegex);\n    let newContent;\n\n    if (match) {\n      const frontmatterText = match[1];\n\n      // Check if the \"calories\" field already exists\n      const hasCaloriesField = frontmatterText\n        .split(\"\\n\")\n        .some((line) => line.startsWith(\"calories:\"));\n\n      if (hasCaloriesField) {\n        // Modify the existing \"calories\" value\n        const updatedFrontmatter = frontmatterText\n          .split(\"\\n\")\n          .map((line) =>\n            line.startsWith(\"calories:\") ? `calories: ${newCalories}` : line\n          )\n          .join(\"\\n\");\n\n        newContent = content.replace(\n          frontmatterRegex,\n          `---\\n${updatedFrontmatter}\\n---`\n        );\n      } else {\n        // Add the \"calories\" field to the existing frontmatter\n        const updatedFrontmatter =\n          frontmatterText + `\\ncalories: ${newCalories}`;\n        newContent = content.replace(\n          frontmatterRegex,\n          `---\\n${updatedFrontmatter}\\n---`\n        );\n      }\n    } else {\n      // If no frontmatter exists, create it\n      newContent = `---\\ncalories: ${newCalories}\\n---\\n\\n${content}`;\n    }\n\n    // Save the updated file\n    await this.app.vault.modify(file, newContent);\n  }\n\n  /**\n   * Calculates calorie totals by properly parsing the EST.CALORIES column in markdown tables\n   * and updating the calories frontmatter key with the sum.\n   */\n  async calculateCalorieTotals() {\n    const journalFolderName = this.settings.journalFolderName || \"Journal\";\n    const journalFolder =\n      this.app.vault.getAbstractFileByPath(journalFolderName);\n\n    if (!journalFolder || !(journalFolder instanceof TFolder)) {\n      new Notice(`Journal folder \"${journalFolderName}\" not found.`);\n      return;\n    }\n\n    // Get all journal files with YYYY-MM-DD.md format\n    const journalFiles = journalFolder.children\n      .filter(\n        (file) =>\n          file instanceof TFile && file.name.match(/^\\d{4}-\\d{2}-\\d{2}\\.md$/)\n      )\n      .sort((a, b) => b.name.localeCompare(a.name)) as TFile[]; // Sort by date descending\n\n    let filesProcessed = 0;\n    let filesUpdated = 0;\n\n    // Function to debug print a raw markdown table for inspection\n    const debugPrintTable = (tableName: string, tableText: string) => {\n      console.log(`\\n--- ${tableName} ---`);\n      console.log(tableText);\n      console.log(\"-------------------\\n\");\n    };\n\n    for (const file of journalFiles) {\n      filesProcessed++;\n      const content = await this.app.vault.read(file);\n\n      // Very specific approach: Look for a markdown table that has EST.CALORIES in the header\n      // The crucial part is to properly parse the table structure with vertical bars\n      // Start by looking at the content line by line, but preserve the exact format of each line\n      const lines = content.split(\"\\n\");\n      let foundCalorieTable = false;\n      let calorieTableLines: string[] = [];\n      let tableStartLine = 0;\n\n      // First find a table with EST.CALORIES in the header\n      for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        // Look for a header row that contains EST.CALORIES\n        if (\n          line.includes(\"EST.CALORIES\") &&\n          line.startsWith(\"|\") &&\n          line.endsWith(\"|\")\n        ) {\n          foundCalorieTable = true;\n          tableStartLine = i;\n          break;\n        }\n      }\n\n      if (!foundCalorieTable) {\n        // No calorie table found in this file\n        console.log(`No table with EST.CALORIES found in ${file.name}`);\n        continue;\n      }\n\n      // Now extract the complete table\n      let tableEndLine = tableStartLine;\n      for (let i = tableStartLine; i < lines.length; i++) {\n        const line = lines[i];\n        if (line.startsWith(\"|\") && line.endsWith(\"|\")) {\n          calorieTableLines.push(line);\n          tableEndLine = i;\n        } else if (i > tableStartLine) {\n          // We've reached the end of the table\n          break;\n        }\n      }\n\n      // Make sure we have a header and at least one data row\n      if (calorieTableLines.length < 3) {\n        console.log(\n          `Table too short in ${file.name}, found ${calorieTableLines.length} lines`\n        );\n        continue;\n      }\n\n      const tableText = calorieTableLines.join(\"\\n\");\n      debugPrintTable(`Table in ${file.name}`, tableText);\n\n      // Parse the header to find the column index for EST.CALORIES\n      const headerLine = calorieTableLines[0];\n      const headerCells = headerLine.split(\"|\").map((cell) => cell.trim());\n\n      // Find the index of the EST.CALORIES column (accounting for the empty cells at start/end)\n      let estCaloriesColumnIndex = -1;\n      for (let i = 0; i < headerCells.length; i++) {\n        if (headerCells[i].toUpperCase() === \"EST.CALORIES\") {\n          estCaloriesColumnIndex = i;\n          break;\n        }\n      }\n\n      if (estCaloriesColumnIndex === -1) {\n        console.log(\n          `Could not find EST.CALORIES column in header: ${headerLine}`\n        );\n        continue;\n      }\n\n      console.log(\n        `EST.CALORIES column is at index ${estCaloriesColumnIndex} in ${file.name}`\n      );\n\n      // Now process each data row (skipping header and separator)\n      let totalCalories = 0;\n\n      for (let i = 2; i < calorieTableLines.length; i++) {\n        const dataLine = calorieTableLines[i];\n        const dataCells = dataLine.split(\"|\");\n\n        // Ensure the array has enough elements to access the EST.CALORIES column\n        if (dataCells.length <= estCaloriesColumnIndex) {\n          console.log(`Row has insufficient columns: ${dataLine}`);\n          continue;\n        }\n\n        // Get the actual cell content at the EST.CALORIES position\n        const calorieCell = dataCells[estCaloriesColumnIndex].trim();\n\n        console.log(`Processing cell: \"${calorieCell}\" in ${file.name}`);\n\n        // Skip empty cells or cells with just whitespace\n        if (!calorieCell || calorieCell === \"\") {\n          console.log(`Empty calorie cell in row: ${dataLine}`);\n          continue;\n        }\n\n        // Try to extract a number from the cell\n        // This regex looks for one or more digits, ignoring any surrounding text\n        const numberMatch = calorieCell.match(/\\d+/);\n\n        if (numberMatch) {\n          const calories = parseInt(numberMatch[0], 10);\n          if (!isNaN(calories) && calories > 0) {\n            console.log(\n              `Found ${calories} calories in ${file.name} at line ${\n                tableStartLine + i\n              }`\n            );\n            totalCalories += calories;\n          }\n        }\n      }\n\n      if (totalCalories > 0) {\n        console.log(`Total calories in ${file.name}: ${totalCalories}`);\n        // Update the frontmatter with the calculated total\n        await this.updateCaloriesFrontmatter(file, totalCalories.toString());\n        filesUpdated++;\n      } else {\n        console.log(`No valid calories found in ${file.name}`);\n      }\n    }\n\n    if (filesUpdated > 0) {\n      new Notice(\n        `Updated calorie totals in ${filesUpdated} of ${filesProcessed} journal files.`\n      );\n    } else {\n      new Notice(\n        `No valid calorie data found. Checked ${filesProcessed} journal files.`\n      );\n    }\n  }\n\n  /**\n   * Replaces {WEEKDAY} with the actual day of the week based on the filename.\n   * Runs manually (via command) or automatically when a new file is created.\n   */\n  async replaceWeekday(file?: TFile) {\n    // Get the active file if no specific file is passed\n    if (!file) {\n      const activeView = this.app.workspace.getActiveViewOfType(MarkdownView);\n      file = activeView?.file ?? undefined;\n    }\n\n    // Ensure a valid TFile is provided\n    if (!file) {\n      new Notice(\"Please open a journal entry.\");\n      return;\n    }\n\n    // Check if the file matches the expected yyyy-mm-dd.md pattern\n    const fileName = file.name;\n    const match = fileName.match(/^(\\d{4})-(\\d{2})-(\\d{2})\\.md$/);\n    if (!match) {\n      new Notice(\"This is not a valid journal file.\");\n      return;\n    }\n\n    const [_, year, month, day] = match;\n    const date = new Date(`${year}-${month}-${day}`);\n    const weekday = date\n      .toLocaleDateString(\"en-US\", { weekday: \"long\" })\n      .toUpperCase();\n\n    // Read the file's content\n    let content = await this.app.vault.read(file);\n\n    // Handle frontmatter: Find where it ends (after the second \"---\")\n    const frontmatterEnd = content.indexOf(\"---\", 3); // Find the second \"---\"\n    const bodyStartIndex = frontmatterEnd !== -1 ? frontmatterEnd + 3 : 0; // Skip past \"---\\n\"\n    const bodyContent = content.slice(bodyStartIndex);\n\n    // Replace \"# {WEEKDAY}\" with the actual weekday\n    const updatedBodyContent = bodyContent.replace(\n      /^# \\{WEEKDAY\\}/m,\n      `# ${weekday}`\n    );\n\n    // If no changes were made, notify the user and return\n    if (bodyContent === updatedBodyContent) {\n      new Notice(\"No changes were made; # {WEEKDAY} not found.\");\n      return;\n    }\n\n    // Reassemble the content (frontmatter + updated body)\n    const updatedContent =\n      content.slice(0, bodyStartIndex) + updatedBodyContent;\n\n    // Save the updated content back to the file\n    await this.app.vault.modify(file, updatedContent);\n    new Notice(`Updated {WEEKDAY} to ${weekday}`);\n  }\n\n  /**\n   * Syncs the TODO section of the active journal file with Habitica tasks.\n   * - It verifies the file is in YYYY-MM-DD.md format.\n   * - It locates the \"### TODO:\" header and determines the block boundaries.\n   * - If the block is in its stock state (default tasks), it replaces it entirely.\n   * - Otherwise, it merges new Habitica tasks with existing tasks without erasing them.\n   */\n  async syncTodo() {\n    // Get the active file\n    const activeFile = this.app.workspace.getActiveFile();\n    if (!activeFile) {\n      new Notice(\"No active file found.\");\n      return;\n    }\n    // Check that the file name is in the format YYYY-MM-DD.md\n    if (!/^\\d{4}-\\d{2}-\\d{2}\\.md$/.test(activeFile.name)) {\n      new Notice(\"This command only works on journal files (YYYY-MM-DD.md).\");\n      return;\n    }\n\n    // Read the file content\n    let content = await this.app.vault.read(activeFile);\n    const lines = content.split(\"\\n\");\n\n    // Locate the TODO header; we expect a line exactly \"### TODO:\"\n    let todoStart = -1;\n    let todoEnd = lines.length;\n    for (let i = 0; i < lines.length; i++) {\n      if (/^### TODO:\\s*$/.test(lines[i])) {\n        todoStart = i;\n        // Look for the next markdown header (line starting with '#' and a space)\n        for (let j = i + 1; j < lines.length; j++) {\n          if (/^#{1,6}\\s/.test(lines[j])) {\n            todoEnd = j;\n            break;\n          }\n        }\n        break;\n      }\n    }\n    if (todoStart === -1) {\n      new Notice(\"No TODO header found in this file.\");\n      return;\n    }\n\n    // Extract the current TODO block (including header)\n    const currentTodoBlock = lines.slice(todoStart, todoEnd).join(\"\\n\");\n\n    // Define the stock default block for comparison\n    const defaultBlock = \"### TODO:\\n- [ ] Task 1\\n- [ ] Task 2\\n- [ ] Task 3\";\n\n    // Fetch Habitica TODO tasks using stored credentials\n    const userId = this.settings.habiticaUserId;\n    const apiToken = this.settings.habiticaApiToken;\n    if (!userId || !apiToken) {\n      new Notice(\"Habitica credentials are missing in settings.\");\n      return;\n    }\n    const apiUrl = \"https://habitica.com/api/v3/tasks/user?type=todos\";\n    let response;\n    try {\n      response = await fetch(apiUrl, {\n        headers: {\n          \"x-api-user\": userId,\n          \"x-api-key\": apiToken,\n        },\n      });\n    } catch (err) {\n      new Notice(\"Error fetching Habitica tasks.\");\n      console.error(err);\n      return;\n    }\n    if (!response.ok) {\n      new Notice(\"Failed to fetch tasks from Habitica.\");\n      return;\n    }\n    const data = await response.json();\n    if (data.success !== true) {\n      new Notice(\"Habitica API response unsuccessful.\");\n      return;\n    }\n    // Filter for incomplete TODO tasks\n    const todos = data.data.filter((todo: any) => !todo.completed);\n\n    // Build a Habitica tasks block string.\n    let habiticaBlock = \"\";\n    for (const todo of todos) {\n      let line = `- [ ] ${todo.text}`;\n      habiticaBlock += \"\\n\" + line;\n      if (todo.notes && todo.notes.trim().length > 0) {\n        habiticaBlock += \"\\n    _\" + todo.notes.trim() + \"_\";\n      }\n      if (\n        todo.checklist &&\n        Array.isArray(todo.checklist) &&\n        todo.checklist.length > 0\n      ) {\n        for (const check of todo.checklist) {\n          const checkLine = `- [${check.completed ? \"x\" : \" \"}] ${check.text}`;\n          habiticaBlock += \"\\n    \" + checkLine;\n        }\n      }\n    }\n\n    let newTodoBlock = \"\";\n    // If the current TODO block exactly matches the stock default, replace it entirely.\n    if (currentTodoBlock.trim() === defaultBlock.trim()) {\n      newTodoBlock = \"### TODO:\" + habiticaBlock;\n    } else {\n      // Otherwise, merge Habitica tasks with existing tasks.\n      // Preserve existing lines (which may include completed tasks or custom notes).\n      const existingTaskLines = lines.slice(todoStart + 1, todoEnd);\n      const mergedTasks = [...existingTaskLines];\n      // For each Habitica task, if its text is not already present, append it.\n      for (const todo of todos) {\n        const exists = existingTaskLines.some((line) =>\n          line.includes(todo.text)\n        );\n        if (!exists) {\n          let newLine = `- [ ] ${todo.text}`;\n          if (todo.notes && todo.notes.trim().length > 0) {\n            newLine += \"\\n    _\" + todo.notes.trim() + \"_\";\n          }\n          if (\n            todo.checklist &&\n            Array.isArray(todo.checklist) &&\n            todo.checklist.length > 0\n          ) {\n            for (const check of todo.checklist) {\n              const checkLine = `- [${check.completed ? \"x\" : \" \"}] ${\n                check.text\n              }`;\n              newLine += \"\\n    \" + checkLine;\n            }\n          }\n          mergedTasks.push(newLine);\n        }\n      }\n      newTodoBlock = \"### TODO:\\n\" + mergedTasks.join(\"\\n\");\n    }\n\n    // Reconstruct the file content by replacing the old TODO block with the new one.\n    const newContent = [\n      ...lines.slice(0, todoStart),\n      newTodoBlock,\n      ...lines.slice(todoEnd),\n    ].join(\"\\n\");\n\n    await this.app.vault.modify(activeFile, newContent);\n    new Notice(\"TODO section synced with Habitica tasks.\");\n  }\n\n  /**\n   * Syncs Habitica data to frontmatter in all journal files.\n   * - Scans all YYYY-MM-DD.md files in the journal folder\n   * - Looks for \"Achievements on {date}\" and \"Completed Dailies\" headers\n   * - Processes the bullet lists under those headers\n   * - Updates the frontmatter with values from the Habitica data\n   */\n  async syncHabiticaToFrontmatter() {\n    const journalFolderName = this.settings.journalFolderName || \"Journal\";\n    const journalFolder =\n      this.app.vault.getAbstractFileByPath(journalFolderName);\n\n    if (!journalFolder || !(journalFolder instanceof TFolder)) {\n      new Notice(`Journal folder \"${journalFolderName}\" not found.`);\n      return;\n    }\n\n    // Get the frontmatter glossary mapping\n    const pluginFolder = \".obsidian/plugins/Habsiad\";\n    const glossaryFileName = \"frontmatterGlossary.json\";\n    const glossaryPath = `${pluginFolder}/${glossaryFileName}`;\n\n    let glossaryMapping: { [key: string]: any } = {};\n    try {\n      const data = await this.app.vault.adapter.read(glossaryPath);\n      glossaryMapping = JSON.parse(data);\n    } catch (error) {\n      new Notice(\n        \"Could not read frontmatter glossary. Please set up glossary first.\"\n      );\n      console.error(\"Error reading glossary:\", error);\n      return;\n    }\n\n    // Create a reverse mapping (Habitica key -> frontmatter key)\n    const reverseMapping: { [key: string]: string } = {};\n    for (const [frontmatterKey, value] of Object.entries(glossaryMapping)) {\n      let habiticaKey = \"\";\n      if (typeof value === \"string\") {\n        // Old format: string values\n        habiticaKey = value;\n      } else if (typeof value === \"object\" && value !== null) {\n        // New format: object with habiticaKey property\n        const entry = value as { habiticaKey?: string; isDisabled?: boolean };\n        if (!entry.isDisabled) {\n          habiticaKey = entry.habiticaKey || \"\";\n        }\n      }\n\n      if (habiticaKey) {\n        reverseMapping[habiticaKey] = frontmatterKey;\n      }\n    }\n\n    // Process all journal files\n    const filteredFiles = journalFolder.children.filter(\n      (file: TAbstractFile) =>\n        file instanceof TFile && file.name.match(/^\\d{4}-\\d{2}-\\d{2}\\.md$/)\n    ) as TFile[];\n\n    const journalFiles = filteredFiles.sort((a: TFile, b: TFile) =>\n      b.name.localeCompare(a.name)\n    ); // Sort by date descending\n\n    let filesProcessed = 0;\n    let filesUpdated = 0;\n\n    for (const file of journalFiles) {\n      filesProcessed++;\n      const content = await this.app.vault.read(file);\n\n      // Check if the file has the required headers\n      const achievementsHeaderRegex = /^## Achievements on \\d{4}-\\d{2}-\\d{2}/m;\n      const dailiesHeaderRegex = /^## Completed Dailies/m;\n\n      if (\n        !achievementsHeaderRegex.test(content) &&\n        !dailiesHeaderRegex.test(content)\n      ) {\n        continue; // Skip this file if it doesn't have the required headers\n      }\n\n      // Extract the habit counter values and completed dailies from the content\n      const habitCounters: { [key: string]: number } = {};\n      const completedDailies: string[] = [];\n\n      // Extract habit counters (e.g., \"Habit clicked: Act of Love 💖 - Positive: 2, Negative: 0\")\n      const habitRegex =\n        /\\* Habit clicked: (.*?) - Positive: (\\d+), Negative: (\\d+)/g;\n      let habitMatch;\n      while ((habitMatch = habitRegex.exec(content)) !== null) {\n        const habitName = habitMatch[1];\n        const positiveCount = parseInt(habitMatch[2], 10) || 0;\n        const negativeCount = parseInt(habitMatch[3], 10) || 0;\n        const netCount = positiveCount - negativeCount;\n\n        // Store the habit by its full name for matching purposes\n        habitCounters[habitName] = netCount;\n      }\n\n      // Extract completed dailies (e.g., \"* Daily Name\")\n      const dailiesSection = content.match(\n        /## Completed Dailies\\n([\\s\\S]*?)(?=\\n##|$)/\n      );\n      if (dailiesSection && dailiesSection[1]) {\n        const dailiesList = dailiesSection[1].trim().split(\"\\n\");\n        dailiesList.forEach((daily) => {\n          if (daily.startsWith(\"* \")) {\n            completedDailies.push(daily.substring(2).trim());\n          }\n        });\n      }\n\n      // Update frontmatter based on glossary mapping\n      let frontmatterUpdates: { [key: string]: number } = {};\n\n      // Process habits based on Habitica keys in glossary\n      for (const [habitName, netCount] of Object.entries(habitCounters)) {\n        // Look through all Habitica keys to find a match\n        for (const [habiticaKey, frontmatterKey] of Object.entries(\n          reverseMapping\n        )) {\n          if (habitName.includes(habiticaKey)) {\n            frontmatterUpdates[frontmatterKey] = netCount;\n            break;\n          }\n        }\n      }\n\n      // Process dailies based on Habitica keys in glossary\n      for (const dailyName of completedDailies) {\n        for (const [habiticaKey, frontmatterKey] of Object.entries(\n          reverseMapping\n        )) {\n          if (dailyName.includes(habiticaKey)) {\n            // For completed dailies, set the value to 1\n            frontmatterUpdates[frontmatterKey] = 1;\n            break;\n          }\n        }\n      }\n\n      // If we have updates to make, update the frontmatter\n      if (Object.keys(frontmatterUpdates).length > 0) {\n        await this.updateFrontmatterValues(file, frontmatterUpdates);\n        filesUpdated++;\n      }\n    }\n\n    if (filesUpdated > 0) {\n      new Notice(\n        `Updated frontmatter in ${filesUpdated} of ${filesProcessed} journal files.`\n      );\n    } else {\n      new Notice(`No updates needed. Checked ${filesProcessed} journal files.`);\n    }\n  }\n\n  /**\n   * Updates multiple frontmatter values in a file.\n   */\n  async updateFrontmatterValues(file: TFile, updates: { [key: string]: any }) {\n    let content = await this.app.vault.read(file);\n\n    // Locate frontmatter section\n    const frontmatterRegex = /^---\\n([\\s\\S]*?)\\n---/;\n    const match = content.match(frontmatterRegex);\n    let newContent;\n\n    if (match) {\n      let frontmatterText = match[1];\n      const frontmatterLines = frontmatterText.split(\"\\n\");\n      const updatedLines = [...frontmatterLines];\n\n      // Track which keys we've updated\n      const updatedKeys = new Set<string>();\n\n      // Update existing frontmatter lines\n      for (let i = 0; i < frontmatterLines.length; i++) {\n        const line = frontmatterLines[i];\n        for (const [key, value] of Object.entries(updates)) {\n          if (line.startsWith(`${key}:`)) {\n            updatedLines[i] = `${key}: ${value}`;\n            updatedKeys.add(key);\n            break;\n          }\n        }\n      }\n\n      // Add new frontmatter lines for keys not found\n      for (const [key, value] of Object.entries(updates)) {\n        if (!updatedKeys.has(key)) {\n          updatedLines.push(`${key}: ${value}`);\n        }\n      }\n\n      // Replace the frontmatter block\n      newContent = content.replace(\n        frontmatterRegex,\n        `---\\n${updatedLines.join(\"\\n\")}\\n---`\n      );\n    } else {\n      // If no frontmatter exists, create it\n      const frontmatterLines = Object.entries(updates).map(\n        ([key, value]) => `${key}: ${value}`\n      );\n      newContent = `---\\n${frontmatterLines.join(\"\\n\")}\\n---\\n\\n${content}`;\n    }\n\n    // Save the updated file\n    await this.app.vault.modify(file, newContent);\n  }\n}\n"],"names":[],"sourceRoot":""}